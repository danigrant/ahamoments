{"version":3,"file":"static/webpack/static/development/pages/concept/[id].js.3d7e46aaefa347802dda.hot-update.js","sources":["webpack:///./components/AddExplanationCard.js"],"sourcesContent":["import React from 'react'\nimport Card from './Card'\nimport CardSection from './CardSection'\nimport UploadImage from './uploadExplanationComponents/UploadImage'\nimport UploadVideo from './uploadExplanationComponents/UploadVideo'\nimport UploadAudio from './uploadExplanationComponents/UploadAudio'\nimport AddTweet from './uploadExplanationComponents/AddTweet'\nimport AddPodcast from './uploadExplanationComponents/AddPodcast'\nimport AddLink from './uploadExplanationComponents/AddLink'\nimport AddYouTube from './uploadExplanationComponents/AddYouTube'\nimport WriteText from './uploadExplanationComponents/WriteText'\nimport { saveExplanationWithFileToDB, saveWrittenExplanationToDB, saveExternalLinkExplanationToDB } from '../utils/firebase'\nimport { withRouter } from 'next/router'\n\nclass AddExplanationCard extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      type: false, // photo, video, audio, podcast, youtube, tweet, link, text\n      fileToUpload: '',\n      introText: '',\n      mediaLink: '',\n      mediaConsumptionGuidance: '',\n      showAddExplanationSection: false,\n      activeElement: \"none\" // write, podcast, youtube, recordVideo, recordAudio, tweet, uploadVideo, uploadPhoto, draw, link\n    }\n  }\n  handleFileChange = (e) => {\n    this.setState({fileToUpload: e.target.files[0]});\n  }\n  handleIntroTextChange = (e) => {\n    this.setState({introText: e.target.value});\n  }\n  handleMediaLinkChange = (e) => {\n    this.setState({mediaLink: e.target.value});\n  }\n  handleMediaGuidanceChange = (e) => {\n    this.setState({mediaConsumptionGuidance: e.target.value});\n  }\n  handleSubmit = (e) => {\n    const { router } = this.props\n    e.preventDefault()\n    if (this.state.type == \"photo\" || this.state.type == \"video\" || this.state.type == \"audio\") {\n      saveExplanationWithFileToDB(this.state.introText, this.state.fileToUpload, this.state.activeElement, this.props.loggedInUser.userID, router.query.id)\n    } else if (this.state.type == \"text\") {\n      saveWrittenExplanationToDB(this.state.introText, this.props.loggedInUser.userID, router.query.id)\n    } else if (this.state.type == \"podcast\" || this.state.type == \"youtube\" || this.state.type == \"tweet\" || this.state.type == \"link\") {\n      saveExternalLinkExplanationToDB(this.state.introText, this.state.mediaLink, this.state.mediaConsumptionGuidance, this.state.activeElement, this.props.loggedInUser.userID, router.query.id)\n    }\n  }\n  render() {\n    const { router } = this.props\n    return (\n      <div>\n        <Card>\n          <CardSection>\n            <div className=\"columns-parent-div\">\n              <div className=\"column-80-p\">\n                <p className=\"font-color-light-grey\">Add your own explanation and give someone an aha moment.</p>\n              </div>\n              <div className=\"column-20-p\">\n                {\n                  !this.state.showAddExplanationSection &&\n                  <div onClick={() => { this.setState({ showAddExplanationSection: true }) }} className=\"action-button button background-purple rounded-border font-med font-bold-extra float-right\">Contribute</div>\n                }\n                {\n                  this.state.showAddExplanationSection &&\n                  <div onClick={() => { this.setState({ showAddExplanationSection: false, typeSelected: false, activeElement: \"none\" }) }} className=\"font-med font-bold-extra float-right\"><i className=\"material-icons\">close_rounded</i></div>\n                }\n              </div>\n            </div>\n          </CardSection>\n          {\n            this.state.showAddExplanationSection &&\n            <CardSection>\n              <h2 className=\"font-med\">\n                <span className=\"link\">@barackobama </span>\n                explains\n                <span className=\"link\"> {router.query.id} </span>\n                through\n                <span className=\"link\"> spoken word</span>\n              </h2>\n              <div className=\"media-type-selection-section margin-top-sml\">\n                <div onClick={() => { this.setState({ type: \"text\", activeElement: \"write\" }) }} className={this.state.activeElement == \"write\" ? \"background-purple action-button button rounded-border font-med font-bold-med margin-right-sml margin-bottom-sml\" : \"background-dark-grey action-button button rounded-border font-med font-bold-med margin-right-sml margin-bottom-sml\"}>Write Something</div>\n                <div onClick={() => { this.setState({ type: \"podcast\", activeElement: \"podcast\" }) }} className={this.state.activeElement == \"podcast\" ? \"background-purple action-button button rounded-border font-med font-bold-med margin-right-sml margin-bottom-sml\" : \"background-dark-grey action-button button rounded-border font-med font-bold-med margin-right-sml margin-bottom-sml\"}>Podcast Snippet</div>\n                <div onClick={() => { this.setState({ type: \"youtube\", activeElement: \"youtube\" }) }} className={this.state.activeElement == \"youtube\" ? \"background-purple action-button button rounded-border font-med font-bold-med margin-right-sml margin-bottom-sml\" : \"background-dark-grey action-button button rounded-border font-med font-bold-med margin-right-sml margin-bottom-sml\"}>YouTube Clip</div>\n                <div onClick={() => { this.setState({ type: \"video\", activeElement: \"recordVideo\" }) }} className={this.state.activeElement == \"recordVideo\" ? \"background-purple action-button button rounded-border font-med font-bold-med margin-right-sml margin-bottom-sml\" : \"background-dark-grey action-button button rounded-border font-med font-bold-med margin-right-sml margin-bottom-sml\"}>Record Your Own Video</div>\n                <div onClick={() => { this.setState({ type: \"audio\", activeElement: \"recordAudio\" }) }} className={this.state.activeElement == \"recordAudio\" ? \"background-purple action-button button rounded-border font-med font-bold-med margin-right-sml margin-bottom-sml\" : \"background-dark-grey action-button button rounded-border font-med font-bold-med margin-right-sml margin-bottom-sml\"}>Record Your Own Audio</div>\n                <div onClick={() => { this.setState({ type: \"tweet\", activeElement: \"tweet\" }) }} className={this.state.activeElement == \"tweet\" ? \"background-purple action-button button rounded-border font-med font-bold-med margin-right-sml margin-bottom-sml\" : \"background-dark-grey action-button button rounded-border font-med font-bold-med margin-right-sml margin-bottom-sml\"}>Tweet</div>\n                <div onClick={() => { this.setState({ type: \"video\", activeElement: \"uploadVideo\" }) }} className={this.state.activeElement == \"uploadVideo\" ? \"background-purple action-button button rounded-border font-med font-bold-med margin-right-sml margin-bottom-sml\" : \"background-dark-grey action-button button rounded-border font-med font-bold-med margin-right-sml margin-bottom-sml\"}>Upload A Video</div>\n                <div onClick={() => { this.setState({ type: \"photo\", activeElement: \"uploadPhoto\" }) }} className={this.state.activeElement == \"uploadPhoto\" ? \"background-purple action-button button rounded-border font-med font-bold-med margin-right-sml margin-bottom-sml\" : \"background-dark-grey action-button button rounded-border font-med font-bold-med margin-right-sml margin-bottom-sml\"}>Upload A Photo</div>\n                <div onClick={() => { this.setState({ type: \"photo\", activeElement: \"draw\" }) }} className={this.state.activeElement == \"draw\" ? \"background-purple action-button button rounded-border font-med font-bold-med margin-right-sml margin-bottom-sml\" : \"background-dark-grey action-button button rounded-border font-med font-bold-med margin-right-sml margin-bottom-sml\"}>Draw Something And Upload It</div>\n                <div onClick={() => { this.setState({ type: \"link\", activeElement: \"link\" }) }} className={this.state.activeElement == \"link\" ? \"background-purple action-button button rounded-border font-med font-bold-med margin-right-sml margin-bottom-sml\" : \"background-dark-grey action-button button rounded-border font-med font-bold-med margin-right-sml margin-bottom-sml\"}>Link To Something On The Web</div>\n              </div>\n            </CardSection>\n          }\n          {\n            this.state.showAddExplanationSection && this.state.type &&\n            <div>\n              <CardSection>\n                {\n                  this.state.type == \"text\" &&\n                  <WriteText handleTextChange={this.handleIntroTextChange} currentConcept={router.query.id} />\n                }\n                {\n                  this.state.type == \"podcast\" &&\n                  <AddPodcast handleIntroTextChange={this.handleIntroTextChange} handleMediaLinkChange={this.handleMediaLinkChange} handleMediaGuidanceChange={this.handleMediaGuidanceChange} currentConcept={router.query.id} />\n                }\n                {\n                  this.state.type == \"youtube\" &&\n                  <AddYouTube handleIntroTextChange={this.handleIntroTextChange} handleMediaLinkChange={this.handleMediaLinkChange} handleMediaGuidanceChange={this.handleMediaGuidanceChange} currentConcept={router.query.id} />\n                }\n                {\n                  this.state.type == \"video\" &&\n                  <UploadVideo mode={this.state.activeElement == \"recordVideo\" ? \"record\" : \"upload\"} handleIntroTextChange={this.handleIntroTextChange} handleFileChange={this.handleFileChange} currentConcept={router.query.id} />\n                }\n                {\n                  this.state.type == \"audio\" &&\n                  <UploadAudio handleIntroTextChange={this.handleIntroTextChange} handleFileChange={this.handleFileChange} currentConcept={router.query.id} />\n                }\n                {\n                  this.state.type == \"tweet\" &&\n                  <AddTweet handleIntroTextChange={this.handleIntroTextChange} handleMediaLinkChange={this.handleMediaLinkChange} currentConcept={router.query.id} />\n                }\n                {\n                  this.state.type == \"photo\" &&\n                  <UploadImage mode={this.state.activeElement == \"uploadPhoto\" ? \"upload\" : \"draw\"} handleIntroTextChange={this.handleIntroTextChange} handleFileChange={this.handleFileChange} currentConcept={router.query.id} />\n                }\n                {\n                  this.state.type == \"link\" &&\n                  <AddLink handleIntroTextChange={this.handleIntroTextChange} handleMediaLinkChange={this.handleMediaLinkChange} currentConcept={router.query.id} />\n                }\n              </CardSection>\n              <CardSection>\n                <div onClick={this.handleSubmit} className=\"action-button button background-purple rounded-border font-med font-bold-med\">Submit!</div>\n              </CardSection>\n            </div>\n          }\n        </Card>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(AddExplanationCard)\n\n\n// <form className=\"add-explanation-form\">\n//   <h2 className=\"font-med font-bold-med\">Optional Intro Text</h2>\n//   <textarea className=\"margin-top-sml font-med background-grey rounded-border light-border\" type=\"text\" name=\"text\" placeholder={`Here is a fabulous way to understand ${router.query.id}s...`} rows=\"5\"></textarea>\n//   <h2 className=\"font-med font-bold-med margin-top-sml\">Link to YouTube video</h2>\n//   <input className=\"margin-top-sml font-med background-grey rounded-border light-border\" type=\"text\" name=\"url\" placeholder=\"https:// ...\" />\n//   <h2 className=\"font-med font-bold-med margin-top-sml\">What part should someone listen to?</h2>\n//   <h2 className=\"font-color-light-grey font-med font-bold-med\">(i.e. start at 0:10 and listen until 3:50 and then listen again from 4:05-5:00)</h2>\n//   <input className=\"margin-top-sml font-med background-grey rounded-border light-border\" type=\"text\" name=\"how-to-consume\" placeholder=\"Start at 0:10 and listen until 3:50 and then listen again from 4:05-5:00\" />\n// </form>\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAaA;AAAA;AAAA;AACA;AACA;AAfA;AAgBA;AAAA;AAAA;AACA;AACA;AAlBA;AAmBA;AAAA;AAAA;AACA;AACA;AArBA;AAsBA;AAAA;AAAA;AACA;AACA;AAxBA;AAwBA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjCA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAFA;AAWA;AACA;;;AAuiIA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}