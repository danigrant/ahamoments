{"version":3,"file":"static/webpack/static/development/pages/explainer/[id].js.020b1ae643c94bf3cf8e.hot-update.js","sources":["webpack:///./components/Header.js","webpack:///./pages/explainer/.js"],"sourcesContent":["import React from 'react'\nimport SearchBox from './SearchBox'\nimport LogInButton from './LogInButton'\nimport LogInModalOverlay from './LogInModalOverlay'\nimport Link from 'next/link'\nimport { logUserIn } from '../utils/firebase'\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n  render() {\n    return (\n      <div>\n        <div className=\"header-wrapper light-border-bottom drop-shadow\">\n          <div className=\"constrained-width\">\n            <Link href=\"/\">\n              <img className=\"logo logo-sml link-no-color-change\" src=\"/images/logo.png\" />\n            </Link>\n            <SearchBox />\n            <div className=\"leaderboard-menu-link inline-block font-md\">\n              <Link href=\"/leaderboard\">\n                <p className=\"font-color-light-grey link-no-color-change inline-block\">Leaderboard</p>\n              </Link>\n            </div>\n            <div className=\"float-right inline-block\">\n              {\n                !this.props.loggedIn &&\n                <div onClick={logUserIn} className=\"menu-bar-login-button\"><LogInButton /></div>\n              }\n              {\n                this.props.loggedIn &&\n                <Link href=\"/explainer/@barackobama\">\n                  <img className=\"avatar avatar-med link-no-color-change\" src={this.props.loggedInUser} />\n                </Link>\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Header\n\n// {\n//   !this.props.loggedIn &&\n//   <LogInModalOverlay />\n// }\n\n\n// async handleLogUserIn() {\n//   // first await logUserIn\n//   // in parent function needs to be an auth changed watcher so we dont have to pass up anything\n//   // actually if that is the case then i dont need this function\n// }\n","import React from 'react'\nimport Header from '../../components/Header'\nimport AppContainer from '../../components/AppContainer'\nimport Card from '../../components/Card'\nimport CardSection from '../../components/CardSection'\nimport ExplanationCard from '../../components/ExplanationCard'\nimport { getUserExplanations, getLoggedInUser } from '../../utils/firebase'\nimport { withRouter } from 'next/router'\n\nclass ProfilePage extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      userExplanationArray: []\n    }\n  }\n  async componentDidMount() {\n    this.setState({\n      userExplanationArray: await getUserExplanations(this.props.router.query.id)\n    })\n  }\n  render() {\n    const { router } = this.props\n    return (\n      <div>\n        <Header loggedIn={this.props.loggedIn} loggedInUser={this.props.loggedInUser}/>\n        <AppContainer>\n          <h1 className=\"font-lrg font-bold-med inline-block\">{router.query.id}</h1>\n          <Card>\n            <CardSection>\n              <div className=\"columns-parent-div\">\n                <div className=\"column-50-p flex-center-contents-vertically flex-justify-flex-start\">\n                  <img className=\"avatar avatar-sml top-zero\" src=\"/images/temp-avatar.jpg\" />\n                  <p className=\"font-bold-med font-med inline-block\">{router.query.id}</p>\n                </div>\n                <div className=\"column-50-p flex-center-contents-vertically flex-justify-flex-end\">\n                  <p className=\"font-color-light-grey font-bold-med\">15 explanations • 98 aha moments • ranked #115</p>\n                </div>\n              </div>\n            </CardSection>\n          </Card>\n          <h1 className=\"margin-top-lrg font-lrg font-bold-med inline-block\">Here are all the different ways {router.query.id} has explained things</h1>\n          <p className=\"font-color-light-grey\">There are 114 explanations here. Some will work for you, some won’t.  Keep going until you find one that gives you that aha! moment.</p>\n          <div className=\"margin-top-sml\">\n            {\n              this.state.userExplanationArray.map(e => {\n                return <ExplanationCard key={e.explanationID} explanation={e} />\n              })\n            }\n          </div>\n        </AppContainer>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(ProfilePage)\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AAEA;AACA;;;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;AAlCA;AACA;AAoCA;AAGA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AADA;AAFA;AAKA;AACA;;;;;;;;;;;AACA;;AACA;AACA;;;;AADA;;;AADA;AACA;;;;;;;;;;;;;;;;;AAGA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAMA;;;;AA5CA;AACA;AA8CA;;;;A","sourceRoot":""}