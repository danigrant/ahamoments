{"version":3,"file":"static/webpack/static/development/pages/index.js.9e3bdf047949296e9eca.hot-update.js","sources":["webpack:///./utils/utils.js"],"sourcesContent":["const conceptToDisplayName = concept => {\n  // replace - with space\n  return concept.replace(\"-\", \" \")\n}\n\n//audio, photo, video, youtube, tweet, text, link\nconst explanationTypeToDisplayType = explanationType => {\n  switch(explanationType) {\n  case \"audio\":\n    return \"spoken word\"\n    break;\n  case \"photo\":\n    return \"illustration\"\n    break;\n  case \"video\":\n    return \"monologue\"\n    break;\n  case \"youtube\":\n    return \"poetry\"\n    break;\n  case \"tweet\":\n    return \"280 characters\"\n    break;\n  case \"text\":\n    return \"biography\"\n    break;\n  default:\n    return \"interpretive dance\"\n  }\n}\n\nconst generateFilePathAndName = (fileType, userID, concept) => {\n  let randomID = Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n  return `/${concept}/${fileType}/${userID}/${randomID}`\n}\n\nasync function getTwitterEmbed(tweetUrl) {\n  let twitterUser = tweetUrl.split('twitter.com/')[1].split('/')[0]\n  let twitterStatus = tweetUrl.split('status/')[1].split('?')[0]\n  let res = await fetch(`https://twitter-get-embed-code-proxy.herokuapp.com/twitter-embed-code?name=kylesamani&status=1148350276983824385`)\n  // let res = await fetch(`https://twitter-get-embed-code-proxy.herokuapp.com/twitter-embed-code?name=${twitterUser}&status=${twitterStatus}`)\n  let text = await res.text()\n  console.log();\n  return text\n}\n\nmodule.exports = {\n  conceptToDisplayName,\n  explanationTypeToDisplayType,\n  generateFilePathAndName,\n  getTwitterEmbed\n}\n"],"mappings":";;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AApBA;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AADA;AAGA;AAHA;AAAA;AACA;AADA;AAKA;AACA;AANA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAUA;AACA;AACA;AACA;AACA;AAJA;;;;A","sourceRoot":""}