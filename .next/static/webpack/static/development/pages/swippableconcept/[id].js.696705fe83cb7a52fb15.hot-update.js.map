{"version":3,"file":"static/webpack/static/development/pages/swippableconcept/[id].js.696705fe83cb7a52fb15.hot-update.js","sources":["webpack:///./components/SwipableCardContainer.js"],"sourcesContent":["import React from 'react'\nimport SwipableCard from './SwipableCard'\nimport Card from './Card'\nimport ExplanationCard from './ExplanationCard'\nimport { getConceptExplanations } from '../utils/firebase'\nimport { withRouter } from 'next/router'\nimport update from 'immutability-helper';\nimport ArrowKeysReact from 'arrow-keys-react';\n\nclass SwipableCardContainer extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      explanationCardDeck: this.props.conceptExplanationsArray,\n      displayCardIndex: 0\n    }\n  }\n  advanceCard = () => {\n    this.setState({\n      displayCardIndex: this.state.displayCardIndex + 1\n    })\n  }\n  handleReplay = () => {\n    this.setState({\n      displayCardIndex: 0\n    })\n  }\n  render() {\n    ArrowKeysReact.config({\n        left: () => {\n          this.setState({\n            displayCardIndex: this.state.displayCardIndex - 1\n          });\n        },\n        right: () => { advanceCard() },\n        up: () => {\n          this.setState({\n            displayCardIndex: this.state.displayCardIndex + 1\n          });\n        },\n        down: () => {\n          this.setState({\n            displayCardIndex: this.state.displayCardIndex - 1\n          });\n        }\n      })\n    let currentExplanation = this.state.explanationCardDeck[this.state.displayCardIndex]\n    if (this.state.displayCardIndex == this.state.explanationCardDeck.length ) {\n      // no more cards to display\n      return (\n        <Card>\n          <p>No more cards to display.</p>\n          <div onClick={this.handleReplay} className=\"button\">Replay</div>\n        </Card>\n      )\n    } else {\n      return (\n        <div {...ArrowKeysReact.events}>\n          <SwipableCard key={currentExplanation.explanationID} explanation={currentExplanation} advanceCard={this.advanceCard} loggedInUser={this.props.loggedInUser} />\n        </div>\n      )\n    }\n  }\n}\n\nexport default SwipableCardContainer\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAQA;AACA;AADA;AAGA;AACA;AAZA;AAaA;AACA;AADA;AAGA;AACA;AAfA;AACA;AACA;AAFA;AAFA;AAMA;AACA;;;AAUA;AAAA;AACA;AAAA;AACA;AACA;AACA;AADA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAGA;AAhBA;AAkBA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;;;;AArDA;AACA;AAuDA;;;;A","sourceRoot":""}