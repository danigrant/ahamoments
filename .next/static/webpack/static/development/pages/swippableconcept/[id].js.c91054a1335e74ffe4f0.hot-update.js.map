{"version":3,"file":"static/webpack/static/development/pages/swippableconcept/[id].js.c91054a1335e74ffe4f0.hot-update.js","sources":["webpack:///./components/ExplanationCard.js"],"sourcesContent":["import React from 'react'\nimport Card from './Card'\nimport CardSection from './CardSection'\nimport MultiAvatarUnit from './MultiAvatarUnit'\nimport AhaButton from './AhaButton'\nimport DontGetItButton from './DontGetItButton'\nimport ReactionButtonBar from './ReactionButtonBar'\nimport Link from 'next/link'\nimport EmbeddedPhoto from './explanationMediaComponents/EmbeddedPhoto'\nimport EmbeddedAudio from './explanationMediaComponents/EmbeddedAudio'\nimport EmbeddedVideo from './explanationMediaComponents/EmbeddedVideo'\nimport EmbeddedTweet from './explanationMediaComponents/EmbeddedTweet'\nimport EmbeddedYouTube from './explanationMediaComponents/EmbeddedYouTube'\nimport EmbeddedPodcast from './explanationMediaComponents/EmbeddedPodcast'\nimport EmbeddedLink from './explanationMediaComponents/EmbeddedLink'\nimport { conceptToDisplayName, explanationTypeToDisplayType } from '../utils/utils'\nimport { addAhaToDB, addDontGetItToDB, addReactionGotItToDB, addReactionLaughingToDB, addReactionShockedToDB } from '../utils/firebase'\n\nclass ExplanationCard extends React.Component {\n  constructor(props) {\n    super(props)\n    this.handleAha = this.handleAha.bind(this)\n    this.handleDontGetIt = this.handleDontGetIt.bind(this)\n    this.handleReactionGotIt = this.handleReactionGotIt.bind(this)\n    this.handleReactionLaughing = this.handleReactionLaughing.bind(this)\n    this.handleReactionShocked = this.handleReactionShocked.bind(this)\n  }\n  async handleAha() {\n    await addAhaToDB(this.props.explanation.explanationID, this.props.loggedInUser.userID, this.props.explanation.authorUserID)\n    this.props.handleGoToNextCard()\n  }\n  async handleDontGetIt() {\n    await addDontGetItToDB(this.props.explanation.explanationID, this.props.loggedInUser.userID, this.props.explanation.authorUserID)\n  }\n  async handleReactionGotIt() {\n    await addReactionGotItToDB(this.props.explanation.explanationID, this.props.loggedInUser.userID, this.props.explanation.authorUserID)\n  }\n  async handleReactionLaughing() {\n    await addReactionLaughingToDB(this.props.explanation.explanationID, this.props.loggedInUser.userID, this.props.explanation.authorUserID)\n  }\n  async handleReactionShocked() {\n    await addReactionShockedToDB(this.props.explanation.explanationID, this.props.loggedInUser.userID, this.props.explanation.authorUserID)\n  }\n  render() {\n    return (\n      <div className=\"explanation-card-wrapper\">\n        <Card>\n          <CardSection>\n            <img className=\"avatar avatar-sml\" src={this.props.explanation.authorAvatarUrl} />\n            <p className=\"font-color-light-grey inline-block\">\n              <span className=\"link\"><Link href={`/explainer/${this.props.explanation.authorUserID}`}><a>{this.props.explanation.authorDisplayName}</a></Link> </span>\n              explains\n              <span className=\"link\"> <Link href={`/concept/${this.props.explanation.concept}`}><a>{conceptToDisplayName(this.props.explanation.concept)}</a></Link> </span>\n              through\n              <span className=\"link\"> {explanationTypeToDisplayType(this.props.explanation.explanation.type)}</span>\n            </p>\n          </CardSection>\n          <CardSection>\n            <p className=\"margin-bottom-sml\">{this.props.explanation.explanation.introText}</p>\n            {\n              this.props.explanation.explanation.mediaConsumptionGuidance &&\n              <p className=\"margin-bottom-sml\">{this.props.explanation.explanation.mediaConsumptionGuidance}</p>\n            }\n            {\n              this.props.explanation.explanation.type == \"tweet\" &&\n              <EmbeddedTweet tweet={this.props.explanation.explanation.mediaLink}/>\n            }\n            {\n              this.props.explanation.explanation.type == \"audio\" &&\n              <EmbeddedAudio audio={this.props.explanation.explanation.mediaLink}/>\n            }\n            {\n              this.props.explanation.explanation.type == \"link\" &&\n              <EmbeddedLink link={this.props.explanation.explanation.mediaLink}/>\n            }\n            {\n              this.props.explanation.explanation.type == \"photo\" &&\n              <EmbeddedPhoto photo={this.props.explanation.explanation.mediaLink}/>\n            }\n            {\n              this.props.explanation.explanation.type == \"podcast\" &&\n              <EmbeddedPodcast podcast={this.props.explanation.explanation.mediaLink}/>\n            }\n            {\n              this.props.explanation.explanation.type == \"video\" &&\n              <EmbeddedVideo video={this.props.explanation.explanation.mediaLink}/>\n            }\n            {\n              this.props.explanation.explanation.type == \"youtube\" &&\n              <EmbeddedYouTube youtube={this.props.explanation.explanation.mediaLink}/>\n            }\n          </CardSection>\n          <CardSection>\n            <AhaButton handleAha={this.handleAha} />\n            <DontGetItButton handleDontGetIt={this.handleDontGetIt} />\n            <ReactionButtonBar className=\"float-right\" handleReactionGotIt={this.handleReactionGotIt} handleReactionLaughing={this.handleReactionLaughing} handleReactionShocked={this.handleReactionShocked} />\n          </CardSection>\n        </Card>\n      </div>\n    )\n  }\n}\n\n\n\nexport default ExplanationCard\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AANA;AAOA;AACA;;;;;;;;;;;;AACA;AACA;;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AAlFA;AACA;AAsFA;;;;A","sourceRoot":""}