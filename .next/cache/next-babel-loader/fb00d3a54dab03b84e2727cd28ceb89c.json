{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/danigrant/Projects/ahamoments/components/SwipableCardContainer.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport SwipableCard from './SwipableCard';\nimport Card from './Card';\nimport ExplanationCard from './ExplanationCard';\nimport { getConceptExplanations } from '../utils/firebase';\nimport { withRouter } from 'next/router';\nimport Zoom from 'react-reveal/Zoom';\nimport update from 'immutability-helper';\n\nvar SwipableCardContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SwipableCardContainer, _React$Component);\n\n  function SwipableCardContainer(props) {\n    var _this;\n\n    _classCallCheck(this, SwipableCardContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SwipableCardContainer).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSwipe\", function () {\n      _this.setState({\n        displayCardIndex: _this.state.displayCardIndex + 1\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleReplay\", function () {\n      _this.setState({\n        displayCardIndex: 0\n      });\n    });\n\n    _this.state = {\n      explanationCardDeck: _this.props.conceptExplanationsArray,\n      displayCardIndex: 0,\n      showZoom: false\n    };\n    return _this;\n  }\n\n  _createClass(SwipableCardContainer, [{\n    key: \"render\",\n    value: function render() {\n      var currentExplanation = this.state.explanationCardDeck[this.state.displayCardIndex];\n\n      if (this.state.displayCardIndex == this.state.explanationCardDeck.length) {\n        // no more cards to display\n        return __jsx(Card, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, __jsx(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, \"No more cards to display.\"), __jsx(\"div\", {\n          onClick: this.handleReplay,\n          className: \"button\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, \"Replay\"));\n      } else {\n        return __jsx(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, __jsx(Zoom, {\n          left: true,\n          opposite: true,\n          when: this.state.showZoom,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, __jsx(ExplanationCard, {\n          key: currentExplanation.explanationID,\n          explanation: currentExplanation,\n          loggedInUser: this.props.loggedInUser,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        })), __jsx(\"div\", {\n          onClick: this.handleSwipe,\n          className: \"button\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, \"Next Card\"));\n      }\n    }\n  }]);\n\n  return SwipableCardContainer;\n}(React.Component);\n\nexport default SwipableCardContainer;","map":{"version":3,"sources":["/Users/danigrant/Projects/ahamoments/components/SwipableCardContainer.js"],"names":["React","SwipableCard","Card","ExplanationCard","getConceptExplanations","withRouter","Zoom","update","SwipableCardContainer","props","setState","displayCardIndex","state","explanationCardDeck","conceptExplanationsArray","showZoom","currentExplanation","length","handleReplay","explanationID","loggedInUser","handleSwipe","Component"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,sBAAT,QAAuC,mBAAvC;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;IAEMC,qB;;;;;AACJ,iCAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,+FAAMA,KAAN;;AADiB,kEAQL,YAAM;AAClB,YAAKC,QAAL,CAAc;AACZC,QAAAA,gBAAgB,EAAE,MAAKC,KAAL,CAAWD,gBAAX,GAA8B;AADpC,OAAd;AAGD,KAZkB;;AAAA,mEAaJ,YAAM;AACnB,YAAKD,QAAL,CAAc;AACZC,QAAAA,gBAAgB,EAAE;AADN,OAAd;AAGD,KAjBkB;;AAEjB,UAAKC,KAAL,GAAa;AACXC,MAAAA,mBAAmB,EAAE,MAAKJ,KAAL,CAAWK,wBADrB;AAEXH,MAAAA,gBAAgB,EAAE,CAFP;AAGXI,MAAAA,QAAQ,EAAE;AAHC,KAAb;AAFiB;AAOlB;;;;6BAWQ;AACP,UAAIC,kBAAkB,GAAG,KAAKJ,KAAL,CAAWC,mBAAX,CAA+B,KAAKD,KAAL,CAAWD,gBAA1C,CAAzB;;AACA,UAAI,KAAKC,KAAL,CAAWD,gBAAX,IAA+B,KAAKC,KAAL,CAAWC,mBAAX,CAA+BI,MAAlE,EAA2E;AACzE;AACA,eACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADF,EAEE;AAAK,UAAA,OAAO,EAAE,KAAKC,YAAnB;AAAiC,UAAA,SAAS,EAAC,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,CADF;AAMD,OARD,MAQO;AACL,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,MAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,QAAQ,MAAnB;AAAoB,UAAA,IAAI,EAAE,KAAKN,KAAL,CAAWG,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,MAAC,eAAD;AAAiB,UAAA,GAAG,EAAEC,kBAAkB,CAACG,aAAzC;AAAwD,UAAA,WAAW,EAAEH,kBAArE;AAAyF,UAAA,YAAY,EAAE,KAAKP,KAAL,CAAWW,YAAlH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF,EAIE;AAAK,UAAA,OAAO,EAAE,KAAKC,WAAnB;AAAgC,UAAA,SAAS,EAAC,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAJF,CADF;AAQD;AACF;;;;EAvCiCrB,KAAK,CAACsB,S;;AA0C1C,eAAed,qBAAf","sourcesContent":["import React from 'react'\nimport SwipableCard from './SwipableCard'\nimport Card from './Card'\nimport ExplanationCard from './ExplanationCard'\nimport { getConceptExplanations } from '../utils/firebase'\nimport { withRouter } from 'next/router'\nimport Zoom from 'react-reveal/Zoom';\nimport update from 'immutability-helper';\n\nclass SwipableCardContainer extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      explanationCardDeck: this.props.conceptExplanationsArray,\n      displayCardIndex: 0,\n      showZoom: false\n    }\n  }\n  handleSwipe = () => {\n    this.setState({\n      displayCardIndex: this.state.displayCardIndex + 1\n    })\n  }\n  handleReplay = () => {\n    this.setState({\n      displayCardIndex: 0\n    })\n  }\n  render() {\n    let currentExplanation = this.state.explanationCardDeck[this.state.displayCardIndex]\n    if (this.state.displayCardIndex == this.state.explanationCardDeck.length ) {\n      // no more cards to display\n      return (\n        <Card>\n          <p>No more cards to display.</p>\n          <div onClick={this.handleReplay} className=\"button\">Replay</div>\n        </Card>\n      )\n    } else {\n      return (\n        <div>\n          <Zoom left opposite when={this.state.showZoom}>\n            <ExplanationCard key={currentExplanation.explanationID} explanation={currentExplanation} loggedInUser={this.props.loggedInUser} />\n          </Zoom>\n          <div onClick={this.handleSwipe} className=\"button\">Next Card</div>\n        </div>\n      )\n    }\n  }\n}\n\nexport default SwipableCardContainer\n"]},"metadata":{},"sourceType":"module"}