{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/danigrant/Projects/ahamoments/components/ExplanationCard.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Card from './Card';\nimport CardSection from './CardSection';\nimport MultiAvatarUnit from './MultiAvatarUnit';\nimport AhaButton from './AhaButton';\nimport DontGetItButton from './DontGetItButton';\nimport ReactionButtonBar from './ReactionButtonBar';\nimport Link from 'next/link';\nimport EmbeddedPhoto from './explanationMediaComponents/EmbeddedPhoto';\nimport EmbeddedAudio from './explanationMediaComponents/EmbeddedAudio';\nimport EmbeddedVideo from './explanationMediaComponents/EmbeddedVideo';\nimport EmbeddedTweet from './explanationMediaComponents/EmbeddedTweet';\nimport EmbeddedYouTube from './explanationMediaComponents/EmbeddedYouTube';\nimport EmbeddedPodcast from './explanationMediaComponents/EmbeddedPodcast';\nimport EmbeddedLink from './explanationMediaComponents/EmbeddedLink';\nimport { conceptToDisplayName, explanationTypeToDisplayType } from '../utils/utils';\n\nvar ExplanationCard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ExplanationCard, _React$Component);\n\n  function ExplanationCard(props) {\n    _classCallCheck(this, ExplanationCard);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ExplanationCard).call(this, props));\n  }\n\n  _createClass(ExplanationCard, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        className: \"explanation-card-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, __jsx(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, __jsx(CardSection, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, __jsx(\"img\", {\n        className: \"avatar avatar-sml\",\n        src: this.props.explanation.authorAvatarUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }), __jsx(\"p\", {\n        className: \"font-color-light-grey inline-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        className: \"link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, __jsx(Link, {\n        href: \"/explainer/\".concat(this.props.explanation.authorUserID),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, this.props.explanation.authorDisplayName)), \" \"), \"explains\", __jsx(\"span\", {\n        className: \"link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \" \", __jsx(Link, {\n        href: \"/concept/\".concat(this.props.explanation.concept),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, conceptToDisplayName(this.props.explanation.concept))), \" \"), \"through\", __jsx(\"span\", {\n        className: \"link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \" \", explanationTypeToDisplayType(this.props.explanation.explanation.type)))), __jsx(CardSection, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, this.props.explanation.explanation.introText), this.props.explanation.explanation.type == \"tweet\" && __jsx(EmbeddedTweet, {\n        tweet: this.props.explanation.explanation.mediaLink,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), this.props.explanation.explanation.type == \"audio\" && __jsx(EmbeddedAudio, {\n        audio: this.props.explanation.explanation.mediaLink,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), this.props.explanation.explanation.type == \"link\" && __jsx(EmbeddedLink, {\n        link: this.props.explanation.explanation.mediaLink,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), this.props.explanation.explanation.type == \"photo\" && __jsx(EmbeddedPhoto, {\n        photo: this.props.explanation.explanation.mediaLink,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), this.props.explanation.explanation.type == \"podcast\" && __jsx(EmbeddedPodcast, {\n        podcast: this.props.explanation.explanation.mediaLink,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), this.props.explanation.explanation.type == \"video\" && __jsx(EmbeddedVideo, {\n        video: this.props.explanation.explanation.mediaLink,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), this.props.explanation.explanation.type == \"youtube\" && __jsx(EmbeddedYouTube, {\n        youtube: this.props.explanation.explanation.mediaLink,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), this.props.explanation.explanation.mediaConsumptionGuidance && __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, this.props.explanation.explanation.mediaConsumptionGuidance)), __jsx(CardSection, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, __jsx(AhaButton, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), __jsx(DontGetItButton, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), __jsx(ReactionButtonBar, {\n        className: \"float-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return ExplanationCard;\n}(React.Component);\n\nexport default ExplanationCard;","map":{"version":3,"sources":["/Users/danigrant/Projects/ahamoments/components/ExplanationCard.js"],"names":["React","Card","CardSection","MultiAvatarUnit","AhaButton","DontGetItButton","ReactionButtonBar","Link","EmbeddedPhoto","EmbeddedAudio","EmbeddedVideo","EmbeddedTweet","EmbeddedYouTube","EmbeddedPodcast","EmbeddedLink","conceptToDisplayName","explanationTypeToDisplayType","ExplanationCard","props","explanation","authorAvatarUrl","authorUserID","authorDisplayName","concept","type","introText","mediaLink","mediaConsumptionGuidance","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Card from './Card'\nimport CardSection from './CardSection'\nimport MultiAvatarUnit from './MultiAvatarUnit'\nimport AhaButton from './AhaButton'\nimport DontGetItButton from './DontGetItButton'\nimport ReactionButtonBar from './ReactionButtonBar'\nimport Link from 'next/link'\nimport EmbeddedPhoto from './explanationMediaComponents/EmbeddedPhoto'\nimport EmbeddedAudio from './explanationMediaComponents/EmbeddedAudio'\nimport EmbeddedVideo from './explanationMediaComponents/EmbeddedVideo'\nimport EmbeddedTweet from './explanationMediaComponents/EmbeddedTweet'\nimport EmbeddedYouTube from './explanationMediaComponents/EmbeddedYouTube'\nimport EmbeddedPodcast from './explanationMediaComponents/EmbeddedPodcast'\nimport EmbeddedLink from './explanationMediaComponents/EmbeddedLink'\nimport { conceptToDisplayName, explanationTypeToDisplayType } from '../utils/utils'\n\nclass ExplanationCard extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n  render() {\n    return (\n      <div className=\"explanation-card-wrapper\">\n        <Card>\n          <CardSection>\n            <img className=\"avatar avatar-sml\" src={this.props.explanation.authorAvatarUrl} />\n            <p className=\"font-color-light-grey inline-block\">\n              <span className=\"link\"><Link href={`/explainer/${this.props.explanation.authorUserID}`}><a>{this.props.explanation.authorDisplayName}</a></Link> </span>\n              explains\n              <span className=\"link\"> <Link href={`/concept/${this.props.explanation.concept}`}><a>{conceptToDisplayName(this.props.explanation.concept)}</a></Link> </span>\n              through\n              <span className=\"link\"> {explanationTypeToDisplayType(this.props.explanation.explanation.type)}</span>\n            </p>\n          </CardSection>\n          <CardSection>\n            <p>{this.props.explanation.explanation.introText}</p>\n            {\n              this.props.explanation.explanation.type == \"tweet\" &&\n              <EmbeddedTweet tweet={this.props.explanation.explanation.mediaLink}/>\n            }\n            {\n              this.props.explanation.explanation.type == \"audio\" &&\n              <EmbeddedAudio audio={this.props.explanation.explanation.mediaLink}/>\n            }\n            {\n              this.props.explanation.explanation.type == \"link\" &&\n              <EmbeddedLink link={this.props.explanation.explanation.mediaLink}/>\n            }\n            {\n              this.props.explanation.explanation.type == \"photo\" &&\n              <EmbeddedPhoto photo={this.props.explanation.explanation.mediaLink}/>\n            }\n            {\n              this.props.explanation.explanation.type == \"podcast\" &&\n              <EmbeddedPodcast podcast={this.props.explanation.explanation.mediaLink}/>\n            }\n            {\n              this.props.explanation.explanation.type == \"video\" &&\n              <EmbeddedVideo video={this.props.explanation.explanation.mediaLink}/>\n            }\n            {\n              this.props.explanation.explanation.type == \"youtube\" &&\n              <EmbeddedYouTube youtube={this.props.explanation.explanation.mediaLink}/>\n            }\n            {\n              this.props.explanation.explanation.mediaConsumptionGuidance &&\n              <p>{this.props.explanation.explanation.mediaConsumptionGuidance}</p>\n            }\n          </CardSection>\n          <CardSection>\n            <AhaButton />\n            <DontGetItButton />\n            <ReactionButtonBar className=\"float-right\" />\n          </CardSection>\n        </Card>\n      </div>\n    )\n  }\n}\n\nexport default ExplanationCard\n"]},"metadata":{},"sourceType":"module"}