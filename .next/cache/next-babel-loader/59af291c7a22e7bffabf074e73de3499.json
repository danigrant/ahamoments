{"ast":null,"code":"var conceptToDisplayName = function conceptToDisplayName(concept) {\n  // replace - with space\n  return concept.replace(\"-\", \" \");\n}; //audio, photo, video, youtube, tweet, text, link\n\n\nvar explanationTypeToDisplayType = function explanationTypeToDisplayType(explanationType) {\n  switch (explanationType) {\n    case \"audio\":\n      return \"spoken word\";\n      break;\n\n    case \"photo\":\n      return \"illustration\";\n      break;\n\n    case \"video\":\n      return \"monologue\";\n      break;\n\n    case \"youtube\":\n      return \"poetry\";\n      break;\n\n    case \"tweet\":\n      return \"280 characters\";\n      break;\n\n    case \"text\":\n      return \"biography\";\n      break;\n\n    default:\n      return \"interpretive dance\";\n  }\n};\n\nvar generateFilePathAndName = function generateFilePathAndName(fileType, userID, concept) {\n  var randomID = Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n  return \"/\".concat(concept, \"/\").concat(fileType, \"/\").concat(userID, \"/\").concat(randomID);\n}; // async function getTwitterEmbed(tweetUrl) {\n//   let twitterUser = tweetUrl.split('twitter.com/')[1].split('/')[0]\n//   let twitterStatus = tweetUrl.split('status/')[1].split('?')[0]\n//   let res = await fetch(`https://twitter-get-embed-code-proxy.herokuapp.com/twitter-embed-code?name=kylesamani&status=1148350276983824385`)\n//   // let res = await fetch(`https://twitter-get-embed-code-proxy.herokuapp.com/twitter-embed-code?name=${twitterUser}&status=${twitterStatus}`)\n//   let text = await res.text()\n//   console.log();\n//   return text\n// }\n\n\nmodule.exports = {\n  conceptToDisplayName: conceptToDisplayName,\n  explanationTypeToDisplayType: explanationTypeToDisplayType,\n  generateFilePathAndName: generateFilePathAndName\n};","map":{"version":3,"sources":["/Users/danigrant/Projects/ahamoments/utils/utils.js"],"names":["conceptToDisplayName","concept","replace","explanationTypeToDisplayType","explanationType","generateFilePathAndName","fileType","userID","randomID","Math","random","toString","substring","module","exports"],"mappings":"AAAA,IAAMA,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAAC,OAAO,EAAI;AACtC;AACA,SAAOA,OAAO,CAACC,OAAR,CAAgB,GAAhB,EAAqB,GAArB,CAAP;AACD,CAHD,C,CAKA;;;AACA,IAAMC,4BAA4B,GAAG,SAA/BA,4BAA+B,CAAAC,eAAe,EAAI;AACtD,UAAOA,eAAP;AACA,SAAK,OAAL;AACE,aAAO,aAAP;AACA;;AACF,SAAK,OAAL;AACE,aAAO,cAAP;AACA;;AACF,SAAK,OAAL;AACE,aAAO,WAAP;AACA;;AACF,SAAK,SAAL;AACE,aAAO,QAAP;AACA;;AACF,SAAK,OAAL;AACE,aAAO,gBAAP;AACA;;AACF,SAAK,MAAL;AACE,aAAO,WAAP;AACA;;AACF;AACE,aAAO,oBAAP;AApBF;AAsBD,CAvBD;;AAyBA,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACC,QAAD,EAAWC,MAAX,EAAmBN,OAAnB,EAA+B;AAC7D,MAAIO,QAAQ,GAAGC,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,SAA3B,CAAqC,CAArC,EAAwC,EAAxC,IAA8CH,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,SAA3B,CAAqC,CAArC,EAAwC,EAAxC,CAA7D;AACA,oBAAWX,OAAX,cAAsBK,QAAtB,cAAkCC,MAAlC,cAA4CC,QAA5C;AACD,CAHD,C,CAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAK,MAAM,CAACC,OAAP,GAAiB;AACfd,EAAAA,oBAAoB,EAApBA,oBADe;AAEfG,EAAAA,4BAA4B,EAA5BA,4BAFe;AAGfE,EAAAA,uBAAuB,EAAvBA;AAHe,CAAjB","sourcesContent":["const conceptToDisplayName = concept => {\n  // replace - with space\n  return concept.replace(\"-\", \" \")\n}\n\n//audio, photo, video, youtube, tweet, text, link\nconst explanationTypeToDisplayType = explanationType => {\n  switch(explanationType) {\n  case \"audio\":\n    return \"spoken word\"\n    break;\n  case \"photo\":\n    return \"illustration\"\n    break;\n  case \"video\":\n    return \"monologue\"\n    break;\n  case \"youtube\":\n    return \"poetry\"\n    break;\n  case \"tweet\":\n    return \"280 characters\"\n    break;\n  case \"text\":\n    return \"biography\"\n    break;\n  default:\n    return \"interpretive dance\"\n  }\n}\n\nconst generateFilePathAndName = (fileType, userID, concept) => {\n  let randomID = Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n  return `/${concept}/${fileType}/${userID}/${randomID}`\n}\n\n// async function getTwitterEmbed(tweetUrl) {\n//   let twitterUser = tweetUrl.split('twitter.com/')[1].split('/')[0]\n//   let twitterStatus = tweetUrl.split('status/')[1].split('?')[0]\n//   let res = await fetch(`https://twitter-get-embed-code-proxy.herokuapp.com/twitter-embed-code?name=kylesamani&status=1148350276983824385`)\n//   // let res = await fetch(`https://twitter-get-embed-code-proxy.herokuapp.com/twitter-embed-code?name=${twitterUser}&status=${twitterStatus}`)\n//   let text = await res.text()\n//   console.log();\n//   return text\n// }\n\nmodule.exports = {\n  conceptToDisplayName,\n  explanationTypeToDisplayType,\n  generateFilePathAndName\n}\n"]},"metadata":{},"sourceType":"script"}