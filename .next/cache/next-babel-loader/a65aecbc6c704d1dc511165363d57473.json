{"ast":null,"code":"var _jsxFileName = \"/Users/danigrant/Projects/ahamoments/pages/concept/[id].js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Header from '../../components/Header';\nimport AppContainer from '../../components/AppContainer';\nimport Card from '../../components/Card';\nimport CardSection from '../../components/CardSection';\nimport AddExplanationCard from '../../components/AddExplanationCard';\nimport ExplanationCard from '../../components/ExplanationCard';\nimport Loading from '../../components/Loading';\nimport { getConceptExplanations } from '../../utils/firebase';\nimport { withRouter } from 'next/router';\n\nclass ConceptPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      conceptExplanationsArray: []\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      router\n    } = this.props;\n    this.setState({\n      conceptExplanationsArray: await getConceptExplanations(router.query.id)\n    });\n  }\n\n  render() {\n    const {\n      router\n    } = this.props;\n    {\n      if (!this.state.conceptExplanationsArray.length) {\n        return __jsx(Loading, {\n          loggedIn: this.props.loggedIn,\n          loggedInUser: this.props.loggedInUser,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        });\n      } else {\n        return __jsx(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, __jsx(Header, {\n          loggedIn: this.props.loggedIn,\n          loggedInUser: this.props.loggedInUser,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }), __jsx(AppContainer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"concept-title-bar\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, __jsx(\"h1\", {\n          className: \"font-lrg font-bold-med inline-block capitalize\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, router.query.id), __jsx(\"p\", {\n          className: \"font-color-light-grey inline-block margin-left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, \"originally asked by @bofirstdog\")), __jsx(AddExplanationCard, {\n          loggedInUser: this.props.loggedInUser,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }), __jsx(\"h1\", {\n          className: \"margin-top-lrg font-lrg font-bold-med inline-block\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, \"All of the wacky and wonderful ways to explain a \", router.query.id, \" \"), __jsx(\"p\", {\n          className: \"font-color-light-grey\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, \"There are 114 explanations here. Some will work for you, some won\\u2019t.  Keep going until you find one that gives you that aha! moment.\"), __jsx(\"div\", {\n          className: \"margin-top-sml\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, this.state.conceptExplanationsArray.map(e => {\n          return __jsx(ExplanationCard, {\n            key: e.explanationID,\n            explanation: e,\n            loggedInUser: this.props.loggedInUser,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47\n            },\n            __self: this\n          });\n        }))));\n      }\n    }\n  }\n\n}\n\nexport default withRouter(ConceptPage);","map":{"version":3,"sources":["/Users/danigrant/Projects/ahamoments/pages/concept/[id].js"],"names":["React","Header","AppContainer","Card","CardSection","AddExplanationCard","ExplanationCard","Loading","getConceptExplanations","withRouter","ConceptPage","Component","constructor","props","state","conceptExplanationsArray","componentDidMount","router","setState","query","id","render","length","loggedIn","loggedInUser","map","e","explanationID"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Header from '../../components/Header'\nimport AppContainer from '../../components/AppContainer'\nimport Card from '../../components/Card'\nimport CardSection from '../../components/CardSection'\nimport AddExplanationCard from '../../components/AddExplanationCard'\nimport ExplanationCard from '../../components/ExplanationCard'\nimport Loading from '../../components/Loading'\nimport { getConceptExplanations } from '../../utils/firebase'\nimport { withRouter } from 'next/router'\n\nclass ConceptPage extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      conceptExplanationsArray: []\n    }\n  }\n  async componentDidMount() {\n    const { router } = this.props\n    this.setState({\n      conceptExplanationsArray: await getConceptExplanations(router.query.id)\n    })\n  }\n  render() {\n    const { router } = this.props\n    {\n      if (!this.state.conceptExplanationsArray.length) {\n        return (\n          <Loading loggedIn={this.props.loggedIn} loggedInUser={this.props.loggedInUser} />\n        )\n      } else {\n        return (\n          <div>\n            <Header loggedIn={this.props.loggedIn} loggedInUser={this.props.loggedInUser}/>\n            <AppContainer>\n              <div className=\"concept-title-bar\">\n                <h1 className=\"font-lrg font-bold-med inline-block capitalize\">{router.query.id}</h1>\n                <p className=\"font-color-light-grey inline-block margin-left\">originally asked by @bofirstdog</p>\n              </div>\n              <AddExplanationCard loggedInUser={this.props.loggedInUser} />\n              <h1 className=\"margin-top-lrg font-lrg font-bold-med inline-block\">All of the wacky and wonderful ways to explain a {router.query.id} </h1>\n              <p className=\"font-color-light-grey\">There are 114 explanations here. Some will work for you, some wonâ€™t.  Keep going until you find one that gives you that aha! moment.</p>\n              <div className=\"margin-top-sml\">\n                {\n                  this.state.conceptExplanationsArray.map(e => {\n                    return <ExplanationCard key={e.explanationID} explanation={e} loggedInUser={this.props.loggedInUser} />\n                  })\n                }\n              </div>\n            </AppContainer>\n          </div>\n        )\n      }\n    }\n  }\n}\n\nexport default withRouter(ConceptPage)\n"]},"metadata":{},"sourceType":"module"}