{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/danigrant/Projects/ahamoments/components/SwipableCardContainer.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport SwipableCard from './SwipableCard';\nimport Card from './Card';\nimport ExplanationCard from './ExplanationCard';\nimport { getConceptExplanations } from '../utils/firebase';\nimport { withRouter } from 'next/router';\nimport update from 'immutability-helper';\n\nclass SwipableCardContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"advanceCard\", () => {\n      this.setState({\n        displayCardIndex: this.state.displayCardIndex + 1\n      });\n    });\n\n    _defineProperty(this, \"handleReplay\", () => {\n      this.setState({\n        displayCardIndex: 0\n      });\n    });\n\n    _defineProperty(this, \"handleKeyDown\", e => {\n      if (e.keyCode === 38 && cursor > 0) {\n        this.setState(prevState => ({\n          displayCardIndex: this.state.displayCardIndex + 1\n        }));\n      } else if (e.keyCode === 40 && cursor < result.length - 1) {\n        this.setState(prevState => ({\n          displayCardIndex: this.state.displayCardIndex - 1\n        }));\n      }\n    });\n\n    this.state = {\n      explanationCardDeck: this.props.conceptExplanationsArray,\n      displayCardIndex: 0\n    };\n  }\n\n  render() {\n    let currentExplanation = this.state.explanationCardDeck[this.state.displayCardIndex];\n\n    if (this.state.displayCardIndex == this.state.explanationCardDeck.length) {\n      // no more cards to display\n      return __jsx(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"No more cards to display.\"), __jsx(\"div\", {\n        onClick: this.handleReplay,\n        className: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Replay\"));\n    } else {\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, __jsx(SwipableCard, {\n        key: currentExplanation.explanationID,\n        explanation: currentExplanation,\n        advanceCard: this.advanceCard,\n        loggedInUser: this.props.loggedInUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\nexport default SwipableCardContainer;","map":{"version":3,"sources":["/Users/danigrant/Projects/ahamoments/components/SwipableCardContainer.js"],"names":["React","SwipableCard","Card","ExplanationCard","getConceptExplanations","withRouter","update","SwipableCardContainer","Component","constructor","props","setState","displayCardIndex","state","e","keyCode","cursor","prevState","result","length","explanationCardDeck","conceptExplanationsArray","render","currentExplanation","handleReplay","explanationID","advanceCard","loggedInUser"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,sBAAT,QAAuC,mBAAvC;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAEA,MAAMC,qBAAN,SAAoCP,KAAK,CAACQ,SAA1C,CAAoD;AAClDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,yCAOL,MAAM;AAClB,WAAKC,QAAL,CAAc;AACZC,QAAAA,gBAAgB,EAAE,KAAKC,KAAL,CAAWD,gBAAX,GAA8B;AADpC,OAAd;AAGD,KAXkB;;AAAA,0CAYJ,MAAM;AACnB,WAAKD,QAAL,CAAc;AACZC,QAAAA,gBAAgB,EAAE;AADN,OAAd;AAGD,KAhBkB;;AAAA,2CAiBFE,CAAD,IAAO;AACrB,UAAIA,CAAC,CAACC,OAAF,KAAc,EAAd,IAAoBC,MAAM,GAAG,CAAjC,EAAoC;AAClC,aAAKL,QAAL,CAAeM,SAAS,KAAK;AAC3BL,UAAAA,gBAAgB,EAAE,KAAKC,KAAL,CAAWD,gBAAX,GAA8B;AADrB,SAAL,CAAxB;AAGD,OAJD,MAIO,IAAIE,CAAC,CAACC,OAAF,KAAc,EAAd,IAAoBC,MAAM,GAAGE,MAAM,CAACC,MAAP,GAAgB,CAAjD,EAAoD;AACzD,aAAKR,QAAL,CAAeM,SAAS,KAAK;AAC3BL,UAAAA,gBAAgB,EAAE,KAAKC,KAAL,CAAWD,gBAAX,GAA8B;AADrB,SAAL,CAAxB;AAGD;AACF,KA3BkB;;AAEjB,SAAKC,KAAL,GAAa;AACXO,MAAAA,mBAAmB,EAAE,KAAKV,KAAL,CAAWW,wBADrB;AAEXT,MAAAA,gBAAgB,EAAE;AAFP,KAAb;AAID;;AAsBDU,EAAAA,MAAM,GAAG;AACP,QAAIC,kBAAkB,GAAG,KAAKV,KAAL,CAAWO,mBAAX,CAA+B,KAAKP,KAAL,CAAWD,gBAA1C,CAAzB;;AACA,QAAI,KAAKC,KAAL,CAAWD,gBAAX,IAA+B,KAAKC,KAAL,CAAWO,mBAAX,CAA+BD,MAAlE,EAA2E;AACzE;AACA,aACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADF,EAEE;AAAK,QAAA,OAAO,EAAE,KAAKK,YAAnB;AAAiC,QAAA,SAAS,EAAC,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,CADF;AAMD,KARD,MAQO;AACL,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,YAAD;AAAc,QAAA,GAAG,EAAED,kBAAkB,CAACE,aAAtC;AAAqD,QAAA,WAAW,EAAEF,kBAAlE;AAAsF,QAAA,WAAW,EAAE,KAAKG,WAAxG;AAAqH,QAAA,YAAY,EAAE,KAAKhB,KAAL,CAAWiB,YAA9I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAKD;AACF;;AA9CiD;;AAiDpD,eAAepB,qBAAf","sourcesContent":["import React from 'react'\nimport SwipableCard from './SwipableCard'\nimport Card from './Card'\nimport ExplanationCard from './ExplanationCard'\nimport { getConceptExplanations } from '../utils/firebase'\nimport { withRouter } from 'next/router'\nimport update from 'immutability-helper';\n\nclass SwipableCardContainer extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      explanationCardDeck: this.props.conceptExplanationsArray,\n      displayCardIndex: 0\n    }\n  }\n  advanceCard = () => {\n    this.setState({\n      displayCardIndex: this.state.displayCardIndex + 1\n    })\n  }\n  handleReplay = () => {\n    this.setState({\n      displayCardIndex: 0\n    })\n  }\n  handleKeyDown = (e) => {\n    if (e.keyCode === 38 && cursor > 0) {\n      this.setState( prevState => ({\n        displayCardIndex: this.state.displayCardIndex + 1\n      }))\n    } else if (e.keyCode === 40 && cursor < result.length - 1) {\n      this.setState( prevState => ({\n        displayCardIndex: this.state.displayCardIndex - 1\n      }))\n    }\n  }\n  render() {\n    let currentExplanation = this.state.explanationCardDeck[this.state.displayCardIndex]\n    if (this.state.displayCardIndex == this.state.explanationCardDeck.length ) {\n      // no more cards to display\n      return (\n        <Card>\n          <p>No more cards to display.</p>\n          <div onClick={this.handleReplay} className=\"button\">Replay</div>\n        </Card>\n      )\n    } else {\n      return (\n        <div>\n          <SwipableCard key={currentExplanation.explanationID} explanation={currentExplanation} advanceCard={this.advanceCard} loggedInUser={this.props.loggedInUser} />\n        </div>\n      )\n    }\n  }\n}\n\nexport default SwipableCardContainer\n"]},"metadata":{},"sourceType":"module"}