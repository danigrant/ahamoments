{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime-corejs2/helpers/interopRequireWildcard\");\n\nvar firebase = _interopRequireWildcard(require(\"firebase\"));\n\n/*\n  This file contains firebase config and instantiation\n  contains functions that interact with the db\n\n  This file also holds all of the auth functions\n  logUserIn\n  getLoggedInUser <-- returns false if no user logged in\n*/\n// initialize\nconst firebaseConfig = {\n  apiKey: process.env.FIREBASE_API_KEY,\n  authDomain: \"explain-this.firebaseapp.com\",\n  databaseURL: \"https://explain-this.firebaseio.com\",\n  projectId: \"explain-this\",\n  storageBucket: \"explain-this.appspot.com\",\n  messagingSenderId: \"145315125752\",\n  appId: \"1:145315125752:web:4e7c3fe717a051b0471e0d\",\n  measurementId: \"G-2HP7D44T1F\"\n};\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nconst db = firebase.firestore();\nconst conceptsRef = db.collection('concepts');\nconst explanationsRef = db.collection('explanations');\nconst usersRef = db.collection('users');\nconst increment = firebase.firestore.FieldValue.increment(1);\nconst decrement = firebase.firestore.FieldValue.increment(-1);\nconst provider = new firebase.auth.TwitterAuthProvider(); // auth\n\nasync function saveUserToDB() {}\n\nasync function getLoggedInUser() {\n  let user = firebase.auth().currentUser;\n\n  if (!user) {\n    // No user is signed in.\n    return false;\n  }\n\n  return {\n    \"displayName\": \"Barack Obama\",\n    \"userID\": \"MGIVZ1AERHSlK3eojuKUkaverHw1\",\n    \"avatarUrl\": \"/images/temp-avatar.jpg\",\n    \"ahaMomentCount\": 4,\n    \"explanationCount\": 5,\n    \"reactionsCount\": {\n      \"gotIt\": 1,\n      \"laughing\": 2,\n      \"shocked\": 3\n    }\n  }; // maybe pull some stuff about the user into an obj and return that?\n  // user.photoURL, user.displayName\n}\n\nasync function logUserIn() {\n  firebase.auth().signInWithPopup(provider).then(function (result) {\n    // This gives you a the Twitter OAuth 1.0 Access Token and Secret.\n    // You can use these server side with your app's credentials to access the Twitter API.\n    let token = result.credential.accessToken;\n    let secret = result.credential.secret; // The signed-in user info.\n\n    let user = result.user; // can use the getLoggedInUser function to return a good user obj\n    // user.photoURL, user.displayName, user.email, user.uid does not return twitter handle\n\n    console.log(user);\n    return user;\n  }).catch(function (error) {\n    // Handle Errors here.\n    let errorCode = error.code;\n    let errorMessage = error.message; // The email of the user's account used.\n\n    let email = error.email; // The firebase.auth.AuthCredential type that was used.\n\n    let credential = error.credential;\n    console.log(error);\n  });\n} // various utils\n\n\nasync function getUserByID(userID) {\n  return {\n    \"displayName\": \"Barack Obama\",\n    \"userID\": \"MGIVZ1AERHSlK3eojuKUkaverHw1\",\n    \"avatarUrl\": \"/images/temp-avatar.jpg\",\n    \"ahaMomentCount\": 4,\n    \"explanationCount\": 5,\n    \"reactionsCount\": {\n      \"gotIt\": 1,\n      \"laughing\": 2,\n      \"shocked\": 3\n    },\n    explanations: [{\n      \"explanationID\": \"6CpE8XLCBYuMVAFr3wKE\",\n      \"concept\": \"integrals\",\n      \"authorUserID\": \"MGIVZ1AERHSlK3eojuKUkaverHw1\",\n      \"authorAvatarUrl\": \"/images/temp-avatar.jpg\",\n      \"authorDisplayName\": \"Barack Obama\",\n      \"explanation\": {\n        \"type\": \"text\",\n        //audio, photo, video, youtube, tweet, text\n        \"introText\": \"Here is my explanation. Williamsburg pop-up disrupt selvage street art knausgaard. Enamel pin bespoke bicycle rights, craft beer mustache chartreuse cronut cred actually. Jean shorts hexagon art party pop-up four loko scenester, retro four dollar toast meggings gluten-free.\",\n        \"mediaLink\": \"\",\n        \"mediaConsumptionGuidance\": \"\"\n      }\n    }, {\n      \"explanationID\": \"eK2dxVLq5je8dfLWJjZL\",\n      \"concept\": \"integrals\",\n      \"authorUserID\": \"MGIVZ1AERHSlK3eojuKUkaverHw1\",\n      \"authorAvatarUrl\": \"/images/temp-avatar.jpg\",\n      \"authorDisplayName\": \"Barack Obama\",\n      \"explanation\": {\n        \"type\": \"tweet\",\n        //audio, photo, video, youtube, tweet, text\n        \"introText\": \"This explains this well\",\n        \"mediaLink\": \"https://twitter.com/fredwilson/status/1148358347428642817\",\n        \"mediaConsumptionGuidance\": \"\"\n      }\n    }]\n  };\n} // get and return various data\n\n\nasync function saveExplanationToDB() {} // returns 2 concepts for the front page that need love as an obj\n\n\nasync function getConceptsThatNeedLove() {\n  return {\n    \"totalAmountOfConceptsNeedingLove\": 43,\n    \"conceptsNeedingLoveToDisplay\": [{\n      \"conceptName\": \"Derivative\",\n      \"numContributors\": 11,\n      \"contributorAvatars\": [\"/images/temp-avatar.jpg\", \"/images/temp-avatar2.jpg\", \"/images/temp-avatar3.jpg\", \"/images/temp-avatar4.jpg\"]\n    }, {\n      \"conceptName\": \"Limits\",\n      \"numContributors\": 4,\n      \"contributorAvatars\": [\"/images/temp-avatar.jpg\", \"/images/temp-avatar2.jpg\", \"/images/temp-avatar3.jpg\", \"/images/temp-avatar4.jpg\"]\n    }]\n  };\n} // returns top 5 creators in an array\n\n\nasync function getTopCreatorsAllTime() {\n  return [{\n    \"displayName\": \"Barack Obama\",\n    \"userID\": \"MGIVZ1AERHSlK3eojuKUkaverHw1\",\n    \"avatarUrl\": \"/images/temp-avatar.jpg\",\n    \"ahaMomentCount\": 4,\n    \"explanationCount\": 5,\n    \"reactionsCount\": {\n      \"gotIt\": 1,\n      \"laughing\": 2,\n      \"shocked\": 3\n    }\n  }, {\n    \"displayName\": \"Hasan Minhaj\",\n    \"userID\": \"MGIVZ1AERHSlK3eojuKUkaverHw1\",\n    \"avatarUrl\": \"/images/temp-avatar2.jpg\",\n    \"ahaMomentCount\": 4,\n    \"explanationCount\": 5,\n    \"reactionsCount\": {\n      \"gotIt\": 1,\n      \"laughing\": 2,\n      \"shocked\": 3\n    }\n  }, {\n    \"displayName\": \"Stephen Colbert\",\n    \"userID\": \"MGIVZ1AERHSlK3eojuKUkaverHw1\",\n    \"avatarUrl\": \"/images/temp-avatar3.jpg\",\n    \"ahaMomentCount\": 4,\n    \"explanationCount\": 5,\n    \"reactionsCount\": {\n      \"gotIt\": 1,\n      \"laughing\": 2,\n      \"shocked\": 3\n    }\n  }, {\n    \"displayName\": \"John Oliver\",\n    \"userID\": \"MGIVZ1AERHSlK3eojuKUkaverHw1\",\n    \"avatarUrl\": \"/images/temp-avatar4.jpg\",\n    \"ahaMomentCount\": 4,\n    \"explanationCount\": 5,\n    \"reactionsCount\": {\n      \"gotIt\": 1,\n      \"laughing\": 2,\n      \"shocked\": 3\n    }\n  }, {\n    \"displayName\": \"Trevor Noah\",\n    \"userID\": \"MGIVZ1AERHSlK3eojuKUkaverHw1\",\n    \"avatarUrl\": \"/images/temp-avatar5.jpg\",\n    \"ahaMomentCount\": 4,\n    \"explanationCount\": 5,\n    \"reactionsCount\": {\n      \"gotIt\": 1,\n      \"laughing\": 2,\n      \"shocked\": 3\n    }\n  }];\n} // returns array of top 5 explanations\n\n\nasync function getTopExplanationsAllTime() {\n  let formattedConcept = concept.toLowerCase();\n  let snapshot = await explanationsRef.where('concept', '==', formattedConcept).get(); //.orderBy('score', 'desc').get()\n\n  let data = [];\n  await snapshot.forEach(doc => {\n    let docData = doc.data();\n    data.push({\n      \"explanationID\": doc.id,\n      \"concept\": docData.concept,\n      \"authorUserID\": docData.authorUserID,\n      \"authorAvatarUrl\": docData.authorAvatarUrl,\n      \"authorDisplayName\": docData.authorDisplayName,\n      \"explanation\": {\n        \"type\": docData.explanation.type,\n        \"introText\": docData.explanation.introText,\n        \"mediaLink\": docData.explanation.mediaLink,\n        \"mediaConsumptionGuidance\": docData.explanation.mediaConsumptionGuidance\n      },\n      \"ahaMomentCount\": docData.ahaMomentCount,\n      \"totalScore\": docData.totalScore,\n      \"reactions\": {\n        \"gotItCount\": docData.reactionGotItCount,\n        \"laughingCount\": docData.reactionLaughingCount,\n        \"shockedCount\": docData.reactionShockedCount\n      }\n    });\n  });\n  return data;\n}\n\nasync function getTopConceptsAllTime() {\n  return [{\n    \"conceptName\": \"Integrals\",\n    // these need to be transformed into - instead of space\n    \"explanationCount\": 10,\n    \"ahaMomentCount\": 20\n  }, {\n    \"conceptName\": \"Derivatives\",\n    // these need to be transformed into - instead of space\n    \"explanationCount\": 10,\n    \"ahaMomentCount\": 20\n  }, {\n    \"conceptName\": \"Limits\",\n    // these need to be transformed into - instead of space\n    \"explanationCount\": 10,\n    \"ahaMomentCount\": 20\n  }, {\n    \"conceptName\": \"Infinity\",\n    // these need to be transformed into - instead of space\n    \"explanationCount\": 10,\n    \"ahaMomentCount\": 20\n  }, {\n    \"conceptName\": \"Logarithm\",\n    // these need to be transformed into - instead of space\n    \"explanationCount\": 10,\n    \"ahaMomentCount\": 20\n  }];\n} // returns array of explanations for a concept sorted in rank order\n\n\nasync function getConceptExplanations(concept) {\n  let formattedConcept = concept.toLowerCase();\n  let snapshot = await explanationsRef.where('concept', '==', formattedConcept).get(); //.orderBy('score', 'desc').get()\n\n  let data = [];\n  await snapshot.forEach(doc => {\n    let docData = doc.data();\n    data.push({\n      \"explanationID\": doc.id,\n      \"concept\": docData.concept,\n      \"authorUserID\": docData.authorUserID,\n      \"authorAvatarUrl\": docData.authorAvatarUrl,\n      \"authorDisplayName\": docData.authorDisplayName,\n      \"explanation\": {\n        \"type\": docData.explanation.type,\n        \"introText\": docData.explanation.introText,\n        \"mediaLink\": docData.explanation.mediaLink,\n        \"mediaConsumptionGuidance\": docData.explanation.mediaConsumptionGuidance\n      },\n      \"ahaMomentCount\": docData.ahaMomentCount,\n      \"totalScore\": docData.totalScore,\n      \"reactions\": {\n        \"gotItCount\": docData.reactionGotItCount,\n        \"laughingCount\": docData.reactionLaughingCount,\n        \"shockedCount\": docData.reactionShockedCount\n      }\n    });\n  });\n  return data;\n}\n\nmodule.exports = {\n  firebase,\n  logUserIn,\n  saveUserToDB,\n  getLoggedInUser,\n  getUserByID,\n  saveExplanationToDB,\n  getTopConceptsAllTime,\n  getTopCreatorsAllTime,\n  getTopExplanationsAllTime,\n  getConceptsThatNeedLove,\n  getConceptExplanations\n};","map":{"version":3,"sources":["/Users/danigrant/Projects/ahamoments/utils/firebase.js"],"names":["firebaseConfig","apiKey","process","env","FIREBASE_API_KEY","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","apps","length","initializeApp","db","firestore","conceptsRef","collection","explanationsRef","usersRef","increment","FieldValue","decrement","provider","auth","TwitterAuthProvider","saveUserToDB","getLoggedInUser","user","currentUser","logUserIn","signInWithPopup","then","result","token","credential","accessToken","secret","console","log","catch","error","errorCode","code","errorMessage","message","email","getUserByID","userID","explanations","saveExplanationToDB","getConceptsThatNeedLove","getTopCreatorsAllTime","getTopExplanationsAllTime","formattedConcept","concept","toLowerCase","snapshot","where","get","data","forEach","doc","docData","push","id","authorUserID","authorAvatarUrl","authorDisplayName","explanation","type","introText","mediaLink","mediaConsumptionGuidance","ahaMomentCount","totalScore","reactionGotItCount","reactionLaughingCount","reactionShockedCount","getTopConceptsAllTime","getConceptExplanations","module","exports"],"mappings":"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","sourcesContent":["/*\n  This file contains firebase config and instantiation\n  contains functions that interact with the db\n\n  This file also holds all of the auth functions\n  logUserIn\n  getLoggedInUser <-- returns false if no user logged in\n*/\n\nimport * as firebase from 'firebase';\n\n// initialize\n\nconst firebaseConfig = {\n  apiKey: process.env.FIREBASE_API_KEY,\n  authDomain: \"explain-this.firebaseapp.com\",\n  databaseURL: \"https://explain-this.firebaseio.com\",\n  projectId: \"explain-this\",\n  storageBucket: \"explain-this.appspot.com\",\n  messagingSenderId: \"145315125752\",\n  appId: \"1:145315125752:web:4e7c3fe717a051b0471e0d\",\n  measurementId: \"G-2HP7D44T1F\"\n}\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nconst db = firebase.firestore();\nconst conceptsRef = db.collection('concepts');\nconst explanationsRef = db.collection('explanations')\nconst usersRef = db.collection('users')\n\nconst increment = firebase.firestore.FieldValue.increment(1);\nconst decrement = firebase.firestore.FieldValue.increment(-1);\n\nconst provider = new firebase.auth.TwitterAuthProvider();\n\n// auth\n\nasync function saveUserToDB() {\n\n}\n\nasync function getLoggedInUser() {\n  let user = firebase.auth().currentUser\n\n  if (!user) {\n  // No user is signed in.\n    return false;\n  }\n\n  return {\n    \"displayName\": \"Barack Obama\",\n\t\t\"userID\": \"MGIVZ1AERHSlK3eojuKUkaverHw1\",\n\t\t\"avatarUrl\": \"/images/temp-avatar.jpg\",\n\t\t\"ahaMomentCount\": 4,\n\t\t\"explanationCount\": 5,\n\t\t\"reactionsCount\": {\n\t\t\t\"gotIt\": 1,\n\t\t\t\"laughing\": 2,\n\t\t\t\"shocked\": 3\n\t\t}\n  }\n\n  // maybe pull some stuff about the user into an obj and return that?\n  // user.photoURL, user.displayName\n}\n\nasync function logUserIn() {\n  firebase.auth().signInWithPopup(provider).then(function(result) {\n    // This gives you a the Twitter OAuth 1.0 Access Token and Secret.\n    // You can use these server side with your app's credentials to access the Twitter API.\n    let token = result.credential.accessToken;\n    let secret = result.credential.secret;\n    // The signed-in user info.\n    let user = result.user;\n    // can use the getLoggedInUser function to return a good user obj\n\n    // user.photoURL, user.displayName, user.email, user.uid does not return twitter handle\n    console.log(user);\n    return user\n  }).catch(function(error) {\n    // Handle Errors here.\n    let errorCode = error.code;\n    let errorMessage = error.message;\n    // The email of the user's account used.\n    let email = error.email;\n    // The firebase.auth.AuthCredential type that was used.\n    let credential = error.credential;\n    console.log(error);\n  });\n}\n\n// various utils\n\nasync function getUserByID(userID) {\n  return {\n\t\t\"displayName\": \"Barack Obama\",\n\t\t\"userID\": \"MGIVZ1AERHSlK3eojuKUkaverHw1\",\n\t\t\"avatarUrl\": \"/images/temp-avatar.jpg\",\n\t\t\"ahaMomentCount\": 4,\n\t\t\"explanationCount\": 5,\n\t\t\"reactionsCount\": {\n\t\t\t\"gotIt\": 1,\n\t\t\t\"laughing\": 2,\n\t\t\t\"shocked\": 3\n\t\t},\n    explanations: [{\n      \"explanationID\": \"6CpE8XLCBYuMVAFr3wKE\",\n      \"concept\": \"integrals\",\n  \t\t\"authorUserID\": \"MGIVZ1AERHSlK3eojuKUkaverHw1\",\n      \"authorAvatarUrl\": \"/images/temp-avatar.jpg\",\n      \"authorDisplayName\": \"Barack Obama\",\n  \t\t\"explanation\": {\n  \t\t\t\"type\": \"text\", //audio, photo, video, youtube, tweet, text\n  \t\t\t\"introText\": \"Here is my explanation. Williamsburg pop-up disrupt selvage street art knausgaard. Enamel pin bespoke bicycle rights, craft beer mustache chartreuse cronut cred actually. Jean shorts hexagon art party pop-up four loko scenester, retro four dollar toast meggings gluten-free.\",\n  \t\t\t\"mediaLink\": \"\",\n  \t\t\t\"mediaConsumptionGuidance\": \"\"\n  \t\t}\n  \t},\n    {\n      \"explanationID\": \"eK2dxVLq5je8dfLWJjZL\",\n      \"concept\": \"integrals\",\n  \t\t\"authorUserID\": \"MGIVZ1AERHSlK3eojuKUkaverHw1\",\n      \"authorAvatarUrl\": \"/images/temp-avatar.jpg\",\n      \"authorDisplayName\": \"Barack Obama\",\n  \t\t\"explanation\": {\n  \t\t\t\"type\": \"tweet\", //audio, photo, video, youtube, tweet, text\n  \t\t\t\"introText\": \"This explains this well\",\n  \t\t\t\"mediaLink\": \"https://twitter.com/fredwilson/status/1148358347428642817\",\n  \t\t\t\"mediaConsumptionGuidance\": \"\"\n  \t\t}\n  \t}]\n  }\n}\n\n// get and return various data\n\nasync function saveExplanationToDB() {\n\n}\n\n// returns 2 concepts for the front page that need love as an obj\nasync function getConceptsThatNeedLove() {\n  return {\n    \"totalAmountOfConceptsNeedingLove\": 43,\n    \"conceptsNeedingLoveToDisplay\": [\n\t\t{\n\t\t\t\"conceptName\": \"Derivative\",\n\t\t\t\"numContributors\": 11,\n\t\t\t\"contributorAvatars\": [\"/images/temp-avatar.jpg\", \"/images/temp-avatar2.jpg\", \"/images/temp-avatar3.jpg\", \"/images/temp-avatar4.jpg\"]\n\t\t},\n    {\n\t\t\t\"conceptName\": \"Limits\",\n\t\t\t\"numContributors\": 4,\n\t\t\t\"contributorAvatars\": [\"/images/temp-avatar.jpg\", \"/images/temp-avatar2.jpg\", \"/images/temp-avatar3.jpg\", \"/images/temp-avatar4.jpg\"]\n\t\t}]\n  }\n}\n\n// returns top 5 creators in an array\nasync function getTopCreatorsAllTime() {\n  return [{\n\t\t\"displayName\": \"Barack Obama\",\n\t\t\"userID\": \"MGIVZ1AERHSlK3eojuKUkaverHw1\",\n\t\t\"avatarUrl\": \"/images/temp-avatar.jpg\",\n\t\t\"ahaMomentCount\": 4,\n\t\t\"explanationCount\": 5,\n\t\t\"reactionsCount\": {\n\t\t\t\"gotIt\": 1,\n\t\t\t\"laughing\": 2,\n\t\t\t\"shocked\": 3\n\t\t}\n  },\n  {\n\t\t\"displayName\": \"Hasan Minhaj\",\n\t\t\"userID\": \"MGIVZ1AERHSlK3eojuKUkaverHw1\",\n\t\t\"avatarUrl\": \"/images/temp-avatar2.jpg\",\n\t\t\"ahaMomentCount\": 4,\n\t\t\"explanationCount\": 5,\n\t\t\"reactionsCount\": {\n\t\t\t\"gotIt\": 1,\n\t\t\t\"laughing\": 2,\n\t\t\t\"shocked\": 3\n\t\t}\n  },\n  {\n\t\t\"displayName\": \"Stephen Colbert\",\n\t\t\"userID\": \"MGIVZ1AERHSlK3eojuKUkaverHw1\",\n\t\t\"avatarUrl\": \"/images/temp-avatar3.jpg\",\n\t\t\"ahaMomentCount\": 4,\n\t\t\"explanationCount\": 5,\n\t\t\"reactionsCount\": {\n\t\t\t\"gotIt\": 1,\n\t\t\t\"laughing\": 2,\n\t\t\t\"shocked\": 3\n\t\t}\n  },\n  {\n\t\t\"displayName\": \"John Oliver\",\n\t\t\"userID\": \"MGIVZ1AERHSlK3eojuKUkaverHw1\",\n\t\t\"avatarUrl\": \"/images/temp-avatar4.jpg\",\n\t\t\"ahaMomentCount\": 4,\n\t\t\"explanationCount\": 5,\n\t\t\"reactionsCount\": {\n\t\t\t\"gotIt\": 1,\n\t\t\t\"laughing\": 2,\n\t\t\t\"shocked\": 3\n\t\t}\n  },\n  {\n\t\t\"displayName\": \"Trevor Noah\",\n\t\t\"userID\": \"MGIVZ1AERHSlK3eojuKUkaverHw1\",\n\t\t\"avatarUrl\": \"/images/temp-avatar5.jpg\",\n\t\t\"ahaMomentCount\": 4,\n\t\t\"explanationCount\": 5,\n\t\t\"reactionsCount\": {\n\t\t\t\"gotIt\": 1,\n\t\t\t\"laughing\": 2,\n\t\t\t\"shocked\": 3\n\t\t}\n  }]\n}\n\n// returns array of top 5 explanations\nasync function getTopExplanationsAllTime() {\n    let formattedConcept = concept.toLowerCase()\n    let snapshot = await explanationsRef.where('concept', '==', formattedConcept).get() //.orderBy('score', 'desc').get()\n    let data = []\n    await snapshot.forEach(doc => {\n      let docData = doc.data()\n      data.push({\n        \"explanationID\": doc.id,\n        \"concept\": docData.concept,\n        \"authorUserID\": docData.authorUserID,\n        \"authorAvatarUrl\": docData.authorAvatarUrl,\n        \"authorDisplayName\": docData.authorDisplayName,\n        \"explanation\": {\n          \"type\": docData.explanation.type,\n          \"introText\": docData.explanation.introText,\n          \"mediaLink\": docData.explanation.mediaLink,\n          \"mediaConsumptionGuidance\": docData.explanation.mediaConsumptionGuidance\n        },\n        \"ahaMomentCount\": docData.ahaMomentCount,\n        \"totalScore\": docData.totalScore,\n        \"reactions\": {\n          \"gotItCount\": docData.reactionGotItCount,\n          \"laughingCount\": docData.reactionLaughingCount,\n          \"shockedCount\": docData.reactionShockedCount\n        }\n      })\n    })\n    return data\n  }\n\n  async function getTopConceptsAllTime() {\n  return [\n    {\n    \t\"conceptName\": \"Integrals\", // these need to be transformed into - instead of space\n    \t\"explanationCount\": 10,\n      \"ahaMomentCount\": 20\n    },\n    {\n    \t\"conceptName\": \"Derivatives\", // these need to be transformed into - instead of space\n    \t\"explanationCount\": 10,\n      \"ahaMomentCount\": 20\n    },\n    {\n    \t\"conceptName\": \"Limits\", // these need to be transformed into - instead of space\n    \t\"explanationCount\": 10,\n      \"ahaMomentCount\": 20\n    },\n    {\n    \t\"conceptName\": \"Infinity\", // these need to be transformed into - instead of space\n    \t\"explanationCount\": 10,\n      \"ahaMomentCount\": 20\n    },\n    {\n    \t\"conceptName\": \"Logarithm\", // these need to be transformed into - instead of space\n    \t\"explanationCount\": 10,\n      \"ahaMomentCount\": 20\n    }\n  ]\n  }\n\n  // returns array of explanations for a concept sorted in rank order\n  async function getConceptExplanations(concept) {\n  let formattedConcept = concept.toLowerCase()\n  let snapshot = await explanationsRef.where('concept', '==', formattedConcept).get() //.orderBy('score', 'desc').get()\n  let data = []\n  await snapshot.forEach(doc => {\n    let docData = doc.data()\n    data.push({\n      \"explanationID\": doc.id,\n      \"concept\": docData.concept,\n      \"authorUserID\": docData.authorUserID,\n      \"authorAvatarUrl\": docData.authorAvatarUrl,\n      \"authorDisplayName\": docData.authorDisplayName,\n      \"explanation\": {\n        \"type\": docData.explanation.type,\n        \"introText\": docData.explanation.introText,\n        \"mediaLink\": docData.explanation.mediaLink,\n        \"mediaConsumptionGuidance\": docData.explanation.mediaConsumptionGuidance\n      },\n      \"ahaMomentCount\": docData.ahaMomentCount,\n      \"totalScore\": docData.totalScore,\n      \"reactions\": {\n        \"gotItCount\": docData.reactionGotItCount,\n        \"laughingCount\": docData.reactionLaughingCount,\n        \"shockedCount\": docData.reactionShockedCount\n      }\n    })\n  })\n  return data\n}\n\nmodule.exports = {\n  firebase,\n  logUserIn,\n  saveUserToDB,\n  getLoggedInUser,\n  getUserByID,\n  saveExplanationToDB,\n  getTopConceptsAllTime,\n  getTopCreatorsAllTime,\n  getTopExplanationsAllTime,\n  getConceptsThatNeedLove,\n  getConceptExplanations,\n}\n"]},"metadata":{},"sourceType":"script"}