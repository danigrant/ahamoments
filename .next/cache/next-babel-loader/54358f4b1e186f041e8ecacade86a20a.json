{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime-corejs2/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\"));\n\nvar _nodeHtmlParser = require(\"node-html-parser\");\n\nvar conceptToDisplayName = function conceptToDisplayName(concept) {\n  // replace - with space\n  return concept.replace(\"-\", \" \");\n}; //audio, photo, video, youtube, tweet, text, link\n\n\nvar explanationTypeToDisplayType = function explanationTypeToDisplayType(explanationType) {\n  switch (explanationType) {\n    case \"audio\":\n      return \"spoken word\";\n      break;\n\n    case \"photo\":\n      return \"illustration\";\n      break;\n\n    case \"video\":\n      return \"monologue\";\n      break;\n\n    case \"youtube\":\n      return \"poetry\";\n      break;\n\n    case \"tweet\":\n      return \"280 characters\";\n      break;\n\n    case \"text\":\n      return \"biography\";\n      break;\n\n    default:\n      return \"interpretive dance\";\n  }\n};\n\nvar generateFilePathAndName = function generateFilePathAndName(fileType, userID, concept) {\n  var randomID = Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n  return \"/\".concat(concept, \"/\").concat(fileType, \"/\").concat(userID, \"/\").concat(randomID);\n};\n\nfunction getTwitterEmbed(_x) {\n  return _getTwitterEmbed.apply(this, arguments);\n}\n\nfunction _getTwitterEmbed() {\n  _getTwitterEmbed = (0, _asyncToGenerator2[\"default\"])(\n  /*#__PURE__*/\n  _regenerator[\"default\"].mark(function _callee(tweetUrl) {\n    var twitterUser, twitterStatus, res, text;\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            twitterUser = tweetUrl.split('twitter.com/')[1].split('/')[0];\n            twitterStatus = tweetUrl.split('status/')[1].split('?')[0];\n            _context.next = 4;\n            return fetch(\"https://twitter-get-embed-code-proxy.herokuapp.com/twitter-embed-code?name=kylesamani&status=1148350276983824385\");\n\n          case 4:\n            res = _context.sent;\n            _context.next = 7;\n            return res.text();\n\n          case 7:\n            text = _context.sent;\n            console.log();\n            return _context.abrupt(\"return\", (0, _nodeHtmlParser.parse)(text));\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getTwitterEmbed.apply(this, arguments);\n}\n\nmodule.exports = {\n  conceptToDisplayName: conceptToDisplayName,\n  explanationTypeToDisplayType: explanationTypeToDisplayType,\n  generateFilePathAndName: generateFilePathAndName,\n  getTwitterEmbed: getTwitterEmbed\n};","map":{"version":3,"sources":["/Users/danigrant/Projects/ahamoments/utils/utils.js"],"names":["conceptToDisplayName","concept","replace","explanationTypeToDisplayType","explanationType","generateFilePathAndName","fileType","userID","randomID","Math","random","toString","substring","getTwitterEmbed","tweetUrl","twitterUser","split","twitterStatus","fetch","res","text","console","log","module","exports"],"mappings":";;;;;;;;AAAA;;AAEA,IAAMA,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAAC,OAAO,EAAI;AACtC;AACA,SAAOA,OAAO,CAACC,OAAR,CAAgB,GAAhB,EAAqB,GAArB,CAAP;AACD,CAHD,C,CAKA;;;AACA,IAAMC,4BAA4B,GAAG,SAA/BA,4BAA+B,CAAAC,eAAe,EAAI;AACtD,UAAOA,eAAP;AACA,SAAK,OAAL;AACE,aAAO,aAAP;AACA;;AACF,SAAK,OAAL;AACE,aAAO,cAAP;AACA;;AACF,SAAK,OAAL;AACE,aAAO,WAAP;AACA;;AACF,SAAK,SAAL;AACE,aAAO,QAAP;AACA;;AACF,SAAK,OAAL;AACE,aAAO,gBAAP;AACA;;AACF,SAAK,MAAL;AACE,aAAO,WAAP;AACA;;AACF;AACE,aAAO,oBAAP;AApBF;AAsBD,CAvBD;;AAyBA,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACC,QAAD,EAAWC,MAAX,EAAmBN,OAAnB,EAA+B;AAC7D,MAAIO,QAAQ,GAAGC,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,SAA3B,CAAqC,CAArC,EAAwC,EAAxC,IAA8CH,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,SAA3B,CAAqC,CAArC,EAAwC,EAAxC,CAA7D;AACA,oBAAWX,OAAX,cAAsBK,QAAtB,cAAkCC,MAAlC,cAA4CC,QAA5C;AACD,CAHD;;SAKeK,e;;;;;;;+BAAf,iBAA+BC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AACMC,YAAAA,WADN,GACoBD,QAAQ,CAACE,KAAT,CAAe,cAAf,EAA+B,CAA/B,EAAkCA,KAAlC,CAAwC,GAAxC,EAA6C,CAA7C,CADpB;AAEMC,YAAAA,aAFN,GAEsBH,QAAQ,CAACE,KAAT,CAAe,SAAf,EAA0B,CAA1B,EAA6BA,KAA7B,CAAmC,GAAnC,EAAwC,CAAxC,CAFtB;AAAA;AAAA,mBAGkBE,KAAK,oHAHvB;;AAAA;AAGMC,YAAAA,GAHN;AAAA;AAAA,mBAKmBA,GAAG,CAACC,IAAJ,EALnB;;AAAA;AAKMA,YAAAA,IALN;AAMEC,YAAAA,OAAO,CAACC,GAAR;AANF,6CAOS,2BAAMF,IAAN,CAPT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAUAG,MAAM,CAACC,OAAP,GAAiB;AACfxB,EAAAA,oBAAoB,EAApBA,oBADe;AAEfG,EAAAA,4BAA4B,EAA5BA,4BAFe;AAGfE,EAAAA,uBAAuB,EAAvBA,uBAHe;AAIfQ,EAAAA,eAAe,EAAfA;AAJe,CAAjB","sourcesContent":["import { parse } from 'node-html-parser';\n\nconst conceptToDisplayName = concept => {\n  // replace - with space\n  return concept.replace(\"-\", \" \")\n}\n\n//audio, photo, video, youtube, tweet, text, link\nconst explanationTypeToDisplayType = explanationType => {\n  switch(explanationType) {\n  case \"audio\":\n    return \"spoken word\"\n    break;\n  case \"photo\":\n    return \"illustration\"\n    break;\n  case \"video\":\n    return \"monologue\"\n    break;\n  case \"youtube\":\n    return \"poetry\"\n    break;\n  case \"tweet\":\n    return \"280 characters\"\n    break;\n  case \"text\":\n    return \"biography\"\n    break;\n  default:\n    return \"interpretive dance\"\n  }\n}\n\nconst generateFilePathAndName = (fileType, userID, concept) => {\n  let randomID = Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n  return `/${concept}/${fileType}/${userID}/${randomID}`\n}\n\nasync function getTwitterEmbed(tweetUrl) {\n  let twitterUser = tweetUrl.split('twitter.com/')[1].split('/')[0]\n  let twitterStatus = tweetUrl.split('status/')[1].split('?')[0]\n  let res = await fetch(`https://twitter-get-embed-code-proxy.herokuapp.com/twitter-embed-code?name=kylesamani&status=1148350276983824385`)\n  // let res = await fetch(`https://twitter-get-embed-code-proxy.herokuapp.com/twitter-embed-code?name=${twitterUser}&status=${twitterStatus}`)\n  let text = await res.text()\n  console.log();\n  return parse(text)\n}\n\nmodule.exports = {\n  conceptToDisplayName,\n  explanationTypeToDisplayType,\n  generateFilePathAndName,\n  getTwitterEmbed\n}\n"]},"metadata":{},"sourceType":"script"}