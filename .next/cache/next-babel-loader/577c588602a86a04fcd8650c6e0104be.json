{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/danigrant/Projects/ahamoments/components/SwipableCardContainer.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport SwipableCard from './SwipableCard';\nimport Card from './Card';\nimport ExplanationCard from './ExplanationCard';\nimport { getConceptExplanations } from '../utils/firebase';\nimport { withRouter } from 'next/router';\nimport update from 'immutability-helper';\nimport ArrowKeysReact from 'arrow-keys-react';\n\nvar SwipableCardContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SwipableCardContainer, _React$Component);\n\n  function SwipableCardContainer(props) {\n    var _this;\n\n    _classCallCheck(this, SwipableCardContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SwipableCardContainer).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"advanceCard\", function () {\n      _this.setState({\n        displayCardIndex: _this.state.displayCardIndex + 1\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleReplay\", function () {\n      _this.setState({\n        displayCardIndex: 0\n      });\n    });\n\n    _this.state = {\n      explanationCardDeck: _this.props.conceptExplanationsArray,\n      displayCardIndex: 0\n    };\n    return _this;\n  }\n\n  _createClass(SwipableCardContainer, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      ArrowKeysReact.config({\n        left: function left() {\n          _this2.setState({\n            displayCardIndex: _this2.state.displayCardIndex - 1\n          });\n        },\n        right: function right() {\n          _this2.setState({\n            displayCardIndex: _this2.state.displayCardIndex + 1\n          });\n        },\n        up: function up() {\n          _this2.setState({\n            displayCardIndex: _this2.state.displayCardIndex + 1\n          });\n        },\n        down: function down() {\n          _this2.setState({\n            displayCardIndex: _this2.state.displayCardIndex - 1\n          });\n        }\n      });\n      var currentExplanation = this.state.explanationCardDeck[this.state.displayCardIndex];\n\n      if (this.state.displayCardIndex == this.state.explanationCardDeck.length) {\n        // no more cards to display\n        return __jsx(Card, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, __jsx(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, \"No more cards to display.\"), __jsx(\"div\", {\n          onClick: this.handleReplay,\n          className: \"button\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, \"Replay\"));\n      } else {\n        return __jsx(\"div\", _extends({}, ArrowKeysReact.events, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }), __jsx(SwipableCard, {\n          key: currentExplanation.explanationID,\n          explanation: currentExplanation,\n          advanceCard: this.advanceCard,\n          loggedInUser: this.props.loggedInUser,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }));\n      }\n    }\n  }]);\n\n  return SwipableCardContainer;\n}(React.Component);\n\nexport default SwipableCardContainer;","map":{"version":3,"sources":["/Users/danigrant/Projects/ahamoments/components/SwipableCardContainer.js"],"names":["React","SwipableCard","Card","ExplanationCard","getConceptExplanations","withRouter","update","ArrowKeysReact","SwipableCardContainer","props","setState","displayCardIndex","state","explanationCardDeck","conceptExplanationsArray","config","left","right","up","down","currentExplanation","length","handleReplay","events","explanationID","advanceCard","loggedInUser","Component"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,sBAAT,QAAuC,mBAAvC;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;IAEMC,qB;;;;;AACJ,iCAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,+FAAMA,KAAN;;AADiB,kEAOL,YAAM;AAClB,YAAKC,QAAL,CAAc;AACZC,QAAAA,gBAAgB,EAAE,MAAKC,KAAL,CAAWD,gBAAX,GAA8B;AADpC,OAAd;AAGD,KAXkB;;AAAA,mEAYJ,YAAM;AACnB,YAAKD,QAAL,CAAc;AACZC,QAAAA,gBAAgB,EAAE;AADN,OAAd;AAGD,KAhBkB;;AAEjB,UAAKC,KAAL,GAAa;AACXC,MAAAA,mBAAmB,EAAE,MAAKJ,KAAL,CAAWK,wBADrB;AAEXH,MAAAA,gBAAgB,EAAE;AAFP,KAAb;AAFiB;AAMlB;;;;6BAWQ;AAAA;;AACPJ,MAAAA,cAAc,CAACQ,MAAf,CAAsB;AAClBC,QAAAA,IAAI,EAAE,gBAAM;AACV,UAAA,MAAI,CAACN,QAAL,CAAc;AACZC,YAAAA,gBAAgB,EAAE,MAAI,CAACC,KAAL,CAAWD,gBAAX,GAA8B;AADpC,WAAd;AAGD,SALiB;AAMlBM,QAAAA,KAAK,EAAE,iBAAM;AACX,UAAA,MAAI,CAACP,QAAL,CAAc;AACZC,YAAAA,gBAAgB,EAAE,MAAI,CAACC,KAAL,CAAWD,gBAAX,GAA8B;AADpC,WAAd;AAGD,SAViB;AAWlBO,QAAAA,EAAE,EAAE,cAAM;AACR,UAAA,MAAI,CAACR,QAAL,CAAc;AACZC,YAAAA,gBAAgB,EAAE,MAAI,CAACC,KAAL,CAAWD,gBAAX,GAA8B;AADpC,WAAd;AAGD,SAfiB;AAgBlBQ,QAAAA,IAAI,EAAE,gBAAM;AACV,UAAA,MAAI,CAACT,QAAL,CAAc;AACZC,YAAAA,gBAAgB,EAAE,MAAI,CAACC,KAAL,CAAWD,gBAAX,GAA8B;AADpC,WAAd;AAGD;AApBiB,OAAtB;AAsBA,UAAIS,kBAAkB,GAAG,KAAKR,KAAL,CAAWC,mBAAX,CAA+B,KAAKD,KAAL,CAAWD,gBAA1C,CAAzB;;AACA,UAAI,KAAKC,KAAL,CAAWD,gBAAX,IAA+B,KAAKC,KAAL,CAAWC,mBAAX,CAA+BQ,MAAlE,EAA2E;AACzE;AACA,eACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADF,EAEE;AAAK,UAAA,OAAO,EAAE,KAAKC,YAAnB;AAAiC,UAAA,SAAS,EAAC,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,CADF;AAMD,OARD,MAQO;AACL,eACE,0BAASf,cAAc,CAACgB,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YACE,MAAC,YAAD;AAAc,UAAA,GAAG,EAAEH,kBAAkB,CAACI,aAAtC;AAAqD,UAAA,WAAW,EAAEJ,kBAAlE;AAAsF,UAAA,WAAW,EAAE,KAAKK,WAAxG;AAAqH,UAAA,YAAY,EAAE,KAAKhB,KAAL,CAAWiB,YAA9I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF;AAKD;AACF;;;;EAzDiC1B,KAAK,CAAC2B,S;;AA4D1C,eAAenB,qBAAf","sourcesContent":["import React from 'react'\nimport SwipableCard from './SwipableCard'\nimport Card from './Card'\nimport ExplanationCard from './ExplanationCard'\nimport { getConceptExplanations } from '../utils/firebase'\nimport { withRouter } from 'next/router'\nimport update from 'immutability-helper';\nimport ArrowKeysReact from 'arrow-keys-react';\n\nclass SwipableCardContainer extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      explanationCardDeck: this.props.conceptExplanationsArray,\n      displayCardIndex: 0\n    }\n  }\n  advanceCard = () => {\n    this.setState({\n      displayCardIndex: this.state.displayCardIndex + 1\n    })\n  }\n  handleReplay = () => {\n    this.setState({\n      displayCardIndex: 0\n    })\n  }\n  render() {\n    ArrowKeysReact.config({\n        left: () => {\n          this.setState({\n            displayCardIndex: this.state.displayCardIndex - 1\n          });\n        },\n        right: () => {\n          this.setState({\n            displayCardIndex: this.state.displayCardIndex + 1\n          });\n        },\n        up: () => {\n          this.setState({\n            displayCardIndex: this.state.displayCardIndex + 1\n          });\n        },\n        down: () => {\n          this.setState({\n            displayCardIndex: this.state.displayCardIndex - 1\n          });\n        }\n      })\n    let currentExplanation = this.state.explanationCardDeck[this.state.displayCardIndex]\n    if (this.state.displayCardIndex == this.state.explanationCardDeck.length ) {\n      // no more cards to display\n      return (\n        <Card>\n          <p>No more cards to display.</p>\n          <div onClick={this.handleReplay} className=\"button\">Replay</div>\n        </Card>\n      )\n    } else {\n      return (\n        <div {...ArrowKeysReact.events}>\n          <SwipableCard key={currentExplanation.explanationID} explanation={currentExplanation} advanceCard={this.advanceCard} loggedInUser={this.props.loggedInUser} />\n        </div>\n      )\n    }\n  }\n}\n\nexport default SwipableCardContainer\n"]},"metadata":{},"sourceType":"module"}