{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/danigrant/Projects/ahamoments/pages/swippableconcept/[id].js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Header from '../../components/Header';\nimport AppContainer from '../../components/AppContainer';\nimport Card from '../../components/Card';\nimport CardSection from '../../components/CardSection';\nimport AddExplanationCard from '../../components/AddExplanationCard';\nimport ExplanationCard from '../../components/ExplanationCard';\nimport Loading from '../../components/Loading';\nimport SwipableCardContainer from '../../components/SwipableCardContainer';\nimport { getConceptExplanations } from '../../utils/firebase';\nimport { withRouter } from 'next/router';\n\nvar ConceptPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ConceptPage, _React$Component);\n\n  function ConceptPage(props) {\n    var _this;\n\n    _classCallCheck(this, ConceptPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ConceptPage).call(this, props));\n    _this.state = {\n      conceptExplanationsArray: []\n    };\n    return _this;\n  }\n\n  _createClass(ConceptPage, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var router;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                router = this.props.router;\n                _context.t0 = this;\n                _context.next = 4;\n                return getConceptExplanations(router.query.id);\n\n              case 4:\n                _context.t1 = _context.sent;\n                _context.t2 = {\n                  conceptExplanationsArray: _context.t1\n                };\n\n                _context.t0.setState.call(_context.t0, _context.t2);\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var router = this.props.router;\n      {\n        if (!this.state.conceptExplanationsArray.length) {\n          return __jsx(Loading, {\n            loggedIn: this.props.loggedIn,\n            loggedInUser: this.props.loggedInUser,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31\n            },\n            __self: this\n          });\n        } else {\n          return __jsx(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35\n            },\n            __self: this\n          }, __jsx(Header, {\n            loggedIn: this.props.loggedIn,\n            loggedInUser: this.props.loggedInUser,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36\n            },\n            __self: this\n          }), __jsx(AppContainer, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37\n            },\n            __self: this\n          }, __jsx(\"div\", {\n            className: \"concept-title-bar\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38\n            },\n            __self: this\n          }, __jsx(\"h1\", {\n            className: \"font-lrg font-bold-med inline-block capitalize\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39\n            },\n            __self: this\n          }, router.query.id), __jsx(\"p\", {\n            className: \"font-color-light-grey inline-block margin-left\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 40\n            },\n            __self: this\n          }, \"originally asked by @bofirstdog\")), __jsx(AddExplanationCard, {\n            loggedInUser: this.props.loggedInUser,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42\n            },\n            __self: this\n          }), __jsx(\"h1\", {\n            className: \"margin-top-lrg font-lrg font-bold-med inline-block\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 43\n            },\n            __self: this\n          }, \"All of the wacky and wonderful ways to explain a \", router.query.id, \" \"), __jsx(\"p\", {\n            className: \"font-color-light-grey\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44\n            },\n            __self: this\n          }, \"There are 114 explanations here. Some will work for you, some won\\u2019t.  Keep going until you find one that gives you that aha! moment.\"), __jsx(\"div\", {\n            className: \"margin-top-sml\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45\n            },\n            __self: this\n          }, __jsx(SwipableCardContainer, {\n            conceptExplanationsArray: this.state.conceptExplanationsArray,\n            loggedInUser: this.props.loggedInUser,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46\n            },\n            __self: this\n          }))));\n        }\n      }\n    }\n  }]);\n\n  return ConceptPage;\n}(React.Component);\n\nexport default withRouter(ConceptPage);","map":{"version":3,"sources":["/Users/danigrant/Projects/ahamoments/pages/swippableconcept/[id].js"],"names":["React","Header","AppContainer","Card","CardSection","AddExplanationCard","ExplanationCard","Loading","SwipableCardContainer","getConceptExplanations","withRouter","ConceptPage","props","state","conceptExplanationsArray","router","query","id","setState","length","loggedIn","loggedInUser","Component"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,kBAAP,MAA+B,qCAA/B;AACA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,qBAAP,MAAkC,wCAAlC;AACA,SAASC,sBAAT,QAAuC,sBAAvC;AACA,SAASC,UAAT,QAA2B,aAA3B;;IAEMC,W;;;;;AACJ,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,qFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,wBAAwB,EAAE;AADf,KAAb;AAFiB;AAKlB;;;;;;;;;;;;;AAESC,gBAAAA,M,GAAW,KAAKH,K,CAAhBG,M;8BACR,I;;uBACkCN,sBAAsB,CAACM,MAAM,CAACC,KAAP,CAAaC,EAAd,C;;;;;AAAtDH,kBAAAA,wB;;;4BADGI,Q;;;;;;;;;;;;;;;;;;6BAIE;AAAA,UACCH,MADD,GACY,KAAKH,KADjB,CACCG,MADD;AAEP;AACE,YAAI,CAAC,KAAKF,KAAL,CAAWC,wBAAX,CAAoCK,MAAzC,EAAiD;AAC/C,iBACE,MAAC,OAAD;AAAS,YAAA,QAAQ,EAAE,KAAKP,KAAL,CAAWQ,QAA9B;AAAwC,YAAA,YAAY,EAAE,KAAKR,KAAL,CAAWS,YAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAGD,SAJD,MAIO;AACL,iBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,MAAC,MAAD;AAAQ,YAAA,QAAQ,EAAE,KAAKT,KAAL,CAAWQ,QAA7B;AAAuC,YAAA,YAAY,EAAE,KAAKR,KAAL,CAAWS,YAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAK,YAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAI,YAAA,SAAS,EAAC,gDAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAgEN,MAAM,CAACC,KAAP,CAAaC,EAA7E,CADF,EAEE;AAAG,YAAA,SAAS,EAAC,gDAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAFF,CADF,EAKE,MAAC,kBAAD;AAAoB,YAAA,YAAY,EAAE,KAAKL,KAAL,CAAWS,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,EAME;AAAI,YAAA,SAAS,EAAC,oDAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kEAAqHN,MAAM,CAACC,KAAP,CAAaC,EAAlI,MANF,EAOE;AAAG,YAAA,SAAS,EAAC,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yJAPF,EAQE;AAAK,YAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,MAAC,qBAAD;AAAuB,YAAA,wBAAwB,EAAE,KAAKJ,KAAL,CAAWC,wBAA5D;AAAsF,YAAA,YAAY,EAAE,KAAKF,KAAL,CAAWS,YAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CARF,CAFF,CADF;AAiBD;AACF;AACF;;;;EAxCuBrB,KAAK,CAACsB,S;;AA2ChC,eAAeZ,UAAU,CAACC,WAAD,CAAzB","sourcesContent":["import React from 'react'\nimport Header from '../../components/Header'\nimport AppContainer from '../../components/AppContainer'\nimport Card from '../../components/Card'\nimport CardSection from '../../components/CardSection'\nimport AddExplanationCard from '../../components/AddExplanationCard'\nimport ExplanationCard from '../../components/ExplanationCard'\nimport Loading from '../../components/Loading'\nimport SwipableCardContainer from '../../components/SwipableCardContainer'\nimport { getConceptExplanations } from '../../utils/firebase'\nimport { withRouter } from 'next/router'\n\nclass ConceptPage extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      conceptExplanationsArray: []\n    }\n  }\n  async componentDidMount() {\n    const { router } = this.props\n    this.setState({\n      conceptExplanationsArray: await getConceptExplanations(router.query.id)\n    })\n  }\n  render() {\n    const { router } = this.props\n    {\n      if (!this.state.conceptExplanationsArray.length) {\n        return (\n          <Loading loggedIn={this.props.loggedIn} loggedInUser={this.props.loggedInUser} />\n        )\n      } else {\n        return (\n          <div>\n            <Header loggedIn={this.props.loggedIn} loggedInUser={this.props.loggedInUser}/>\n            <AppContainer>\n              <div className=\"concept-title-bar\">\n                <h1 className=\"font-lrg font-bold-med inline-block capitalize\">{router.query.id}</h1>\n                <p className=\"font-color-light-grey inline-block margin-left\">originally asked by @bofirstdog</p>\n              </div>\n              <AddExplanationCard loggedInUser={this.props.loggedInUser} />\n              <h1 className=\"margin-top-lrg font-lrg font-bold-med inline-block\">All of the wacky and wonderful ways to explain a {router.query.id} </h1>\n              <p className=\"font-color-light-grey\">There are 114 explanations here. Some will work for you, some won’t.  Keep going until you find one that gives you that aha! moment.</p>\n              <div className=\"margin-top-sml\">\n                <SwipableCardContainer conceptExplanationsArray={this.state.conceptExplanationsArray} loggedInUser={this.props.loggedInUser}/>\n              </div>\n            </AppContainer>\n          </div>\n        )\n      }\n    }\n  }\n}\n\nexport default withRouter(ConceptPage)\n"]},"metadata":{},"sourceType":"module"}