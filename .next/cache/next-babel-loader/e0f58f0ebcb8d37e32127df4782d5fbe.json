{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/danigrant/Projects/ahamoments/pages/explainer/[id].js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Header from '../../components/Header';\nimport AppContainer from '../../components/AppContainer';\nimport Card from '../../components/Card';\nimport CardSection from '../../components/CardSection';\nimport ExplanationCard from '../../components/ExplanationCard';\nimport { getUserExplanations, getLoggedInUser, getUserNameByID } from '../../utils/firebase';\nimport { withRouter } from 'next/router';\n\nvar ProfilePage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ProfilePage, _React$Component);\n\n  function ProfilePage(props) {\n    var _this;\n\n    _classCallCheck(this, ProfilePage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProfilePage).call(this, props));\n    _this.state = {\n      userExplanationArray: [],\n      userDisplayName: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(ProfilePage, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.t0 = this;\n                _context.next = 3;\n                return getUserExplanations(this.props.router.query.id);\n\n              case 3:\n                _context.t1 = _context.sent;\n                _context.next = 6;\n                return getUserNameByID(this.props.router.query.id);\n\n              case 6:\n                _context.t2 = _context.sent;\n                _context.t3 = {\n                  userExplanationArray: _context.t1,\n                  userDisplayName: _context.t2\n                };\n\n                _context.t0.setState.call(_context.t0, _context.t3);\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var router = this.props.router;\n      {\n        if (!this.state.topExplanationsArray.length || !this.state.conceptsNeedingLoveArray.length || !this.state.topCreatorsArray.length || !this.state.topConceptsArray.length) {\n          return __jsx(Loading, {\n            loggedIn: this.props.loggedIn,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29\n            },\n            __self: this\n          });\n        } else {\n          return __jsx(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33\n            },\n            __self: this\n          }, __jsx(Header, {\n            loggedIn: this.props.loggedIn,\n            loggedInUser: this.props.loggedInUser,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34\n            },\n            __self: this\n          }), __jsx(AppContainer, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35\n            },\n            __self: this\n          }, __jsx(\"h1\", {\n            className: \"font-lrg font-bold-med inline-block\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36\n            },\n            __self: this\n          }, this.state.userDisplayName), __jsx(Card, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37\n            },\n            __self: this\n          }, __jsx(CardSection, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38\n            },\n            __self: this\n          }, __jsx(\"div\", {\n            className: \"columns-parent-div\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39\n            },\n            __self: this\n          }, __jsx(\"div\", {\n            className: \"column-50-p flex-center-contents-vertically flex-justify-flex-start\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 40\n            },\n            __self: this\n          }, __jsx(\"img\", {\n            className: \"avatar avatar-sml top-zero\",\n            src: \"/images/temp-avatar.jpg\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41\n            },\n            __self: this\n          }), __jsx(\"p\", {\n            className: \"font-bold-med font-med inline-block\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42\n            },\n            __self: this\n          }, this.state.userDisplayName)), __jsx(\"div\", {\n            className: \"column-50-p flex-center-contents-vertically flex-justify-flex-end\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44\n            },\n            __self: this\n          }, __jsx(\"p\", {\n            className: \"font-color-light-grey font-bold-med\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45\n            },\n            __self: this\n          }, \"15 explanations \\u2022 98 aha moments \\u2022 ranked #115\"))))), __jsx(\"h1\", {\n            className: \"margin-top-lrg font-lrg font-bold-med inline-block\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          }, \"Here are all the different ways \", this.state.userDisplayName, \" has explained things\"), __jsx(\"p\", {\n            className: \"font-color-light-grey\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51\n            },\n            __self: this\n          }, \"There are 114 explanations here. Some will work for you, some won\\u2019t.  Keep going until you find one that gives you that aha! moment.\"), __jsx(\"div\", {\n            className: \"margin-top-sml\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52\n            },\n            __self: this\n          }, this.state.userExplanationArray.map(function (e) {\n            return __jsx(ExplanationCard, {\n              key: e.explanationID,\n              explanation: e,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 55\n              },\n              __self: this\n            });\n          }))));\n        }\n      }\n    }\n  }]);\n\n  return ProfilePage;\n}(React.Component);\n\nexport default withRouter(ProfilePage);","map":{"version":3,"sources":["/Users/danigrant/Projects/ahamoments/pages/explainer/[id].js"],"names":["React","Header","AppContainer","Card","CardSection","ExplanationCard","getUserExplanations","getLoggedInUser","getUserNameByID","withRouter","ProfilePage","props","state","userExplanationArray","userDisplayName","router","query","id","setState","topExplanationsArray","length","conceptsNeedingLoveArray","topCreatorsArray","topConceptsArray","loggedIn","loggedInUser","map","e","explanationID","Component"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,SAASC,mBAAT,EAA8BC,eAA9B,EAA+CC,eAA/C,QAAsE,sBAAtE;AACA,SAASC,UAAT,QAA2B,aAA3B;;IAEMC,W;;;;;AACJ,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,qFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,oBAAoB,EAAE,EADX;AAEXC,MAAAA,eAAe,EAAE;AAFN,KAAb;AAFiB;AAMlB;;;;;;;;;;;;8BAEC,I;;uBAC8BR,mBAAmB,CAAC,KAAKK,KAAL,CAAWI,MAAX,CAAkBC,KAAlB,CAAwBC,EAAzB,C;;;;;uBACxBT,eAAe,CAAC,KAAKG,KAAL,CAAWI,MAAX,CAAkBC,KAAlB,CAAwBC,EAAzB,C;;;;;AADtCJ,kBAAAA,oB;AACAC,kBAAAA,e;;;4BAFGI,Q;;;;;;;;;;;;;;;;;;6BAKE;AAAA,UACCH,MADD,GACY,KAAKJ,KADjB,CACCI,MADD;AAEP;AACE,YAAI,CAAC,KAAKH,KAAL,CAAWO,oBAAX,CAAgCC,MAAjC,IAA2C,CAAC,KAAKR,KAAL,CAAWS,wBAAX,CAAoCD,MAAhF,IAA0F,CAAC,KAAKR,KAAL,CAAWU,gBAAX,CAA4BF,MAAvH,IAAiI,CAAC,KAAKR,KAAL,CAAWW,gBAAX,CAA4BH,MAAlK,EAA0K;AACxK,iBACE,MAAC,OAAD;AAAS,YAAA,QAAQ,EAAE,KAAKT,KAAL,CAAWa,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAGD,SAJD,MAIO;AACL,iBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,MAAC,MAAD;AAAQ,YAAA,QAAQ,EAAE,KAAKb,KAAL,CAAWa,QAA7B;AAAuC,YAAA,YAAY,EAAE,KAAKb,KAAL,CAAWc,YAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAI,YAAA,SAAS,EAAC,qCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAqD,KAAKb,KAAL,CAAWE,eAAhE,CADF,EAEE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAK,YAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAK,YAAA,SAAS,EAAC,qEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAK,YAAA,SAAS,EAAC,4BAAf;AAA4C,YAAA,GAAG,EAAC,yBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAG,YAAA,SAAS,EAAC,qCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAoD,KAAKF,KAAL,CAAWE,eAA/D,CAFF,CADF,EAKE;AAAK,YAAA,SAAS,EAAC,mEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAG,YAAA,SAAS,EAAC,qCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wEADF,CALF,CADF,CADF,CAFF,EAeE;AAAI,YAAA,SAAS,EAAC,oDAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAAoG,KAAKF,KAAL,CAAWE,eAA/G,0BAfF,EAgBE;AAAG,YAAA,SAAS,EAAC,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yJAhBF,EAiBE;AAAK,YAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAEI,KAAKF,KAAL,CAAWC,oBAAX,CAAgCa,GAAhC,CAAoC,UAAAC,CAAC,EAAI;AACvC,mBAAO,MAAC,eAAD;AAAiB,cAAA,GAAG,EAAEA,CAAC,CAACC,aAAxB;AAAuC,cAAA,WAAW,EAAED,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,WAFD,CAFJ,CAjBF,CAFF,CADF;AA8BD;AACF;AACF;;;;EAtDuB3B,KAAK,CAAC6B,S;;AAyDhC,eAAepB,UAAU,CAACC,WAAD,CAAzB","sourcesContent":["import React from 'react'\nimport Header from '../../components/Header'\nimport AppContainer from '../../components/AppContainer'\nimport Card from '../../components/Card'\nimport CardSection from '../../components/CardSection'\nimport ExplanationCard from '../../components/ExplanationCard'\nimport { getUserExplanations, getLoggedInUser, getUserNameByID } from '../../utils/firebase'\nimport { withRouter } from 'next/router'\n\nclass ProfilePage extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      userExplanationArray: [],\n      userDisplayName: \"\"\n    }\n  }\n  async componentDidMount() {\n    this.setState({\n      userExplanationArray: await getUserExplanations(this.props.router.query.id),\n      userDisplayName: await getUserNameByID(this.props.router.query.id)\n    })\n  }\n  render() {\n    const { router } = this.props\n    {\n      if (!this.state.topExplanationsArray.length || !this.state.conceptsNeedingLoveArray.length || !this.state.topCreatorsArray.length || !this.state.topConceptsArray.length) {\n        return (\n          <Loading loggedIn={this.props.loggedIn} />\n        )\n      } else {\n        return (\n          <div>\n            <Header loggedIn={this.props.loggedIn} loggedInUser={this.props.loggedInUser}/>\n            <AppContainer>\n              <h1 className=\"font-lrg font-bold-med inline-block\">{this.state.userDisplayName}</h1>\n              <Card>\n                <CardSection>\n                  <div className=\"columns-parent-div\">\n                    <div className=\"column-50-p flex-center-contents-vertically flex-justify-flex-start\">\n                      <img className=\"avatar avatar-sml top-zero\" src=\"/images/temp-avatar.jpg\" />\n                      <p className=\"font-bold-med font-med inline-block\">{this.state.userDisplayName}</p>\n                    </div>\n                    <div className=\"column-50-p flex-center-contents-vertically flex-justify-flex-end\">\n                      <p className=\"font-color-light-grey font-bold-med\">15 explanations • 98 aha moments • ranked #115</p>\n                    </div>\n                  </div>\n                </CardSection>\n              </Card>\n              <h1 className=\"margin-top-lrg font-lrg font-bold-med inline-block\">Here are all the different ways {this.state.userDisplayName} has explained things</h1>\n              <p className=\"font-color-light-grey\">There are 114 explanations here. Some will work for you, some won’t.  Keep going until you find one that gives you that aha! moment.</p>\n              <div className=\"margin-top-sml\">\n                {\n                  this.state.userExplanationArray.map(e => {\n                    return <ExplanationCard key={e.explanationID} explanation={e} />\n                  })\n                }\n              </div>\n            </AppContainer>\n          </div>\n        )\n      }\n    }\n  }\n}\n\nexport default withRouter(ProfilePage)\n"]},"metadata":{},"sourceType":"module"}