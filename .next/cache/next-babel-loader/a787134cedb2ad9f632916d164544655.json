{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/danigrant/Projects/ahamoments/components/SwipableCardContainer.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport SwipableCard from './SwipableCard';\nimport Card from './Card';\nimport CardSection from './CardSection';\nimport ExplanationCard from './ExplanationCard';\nimport { getConceptExplanations } from '../utils/firebase';\nimport { withRouter } from 'next/router';\nimport update from 'immutability-helper';\n\nclass SwipableCardContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"advanceCard\", () => {\n      if (this.state.displayCardIndex > this.state.explanationCardDeck.length) {\n        this.setState({\n          displayCardIndex: 0\n        });\n      } else {\n        this.setState({\n          displayCardIndex: this.state.displayCardIndex + 1\n        });\n      }\n    });\n\n    _defineProperty(this, \"decreaseCard\", () => {\n      if (this.state.displayCardIndex < 1) {\n        this.setState({\n          displayCardIndex: 0\n        });\n      } else {\n        this.setState({\n          displayCardIndex: this.state.displayCardIndex - 1\n        });\n      }\n    });\n\n    _defineProperty(this, \"handleReplay\", () => {\n      this.setState({\n        displayCardIndex: 0\n      });\n    });\n\n    _defineProperty(this, \"handleKeyPress\", e => {\n      // right 39, left 37, up 38, down 40\n      if (e.keyCode == 39 || e.keyCode == 38) {\n        this.advanceCard();\n      } else if (e.keyCode == 37 || e.keyCode == 40) {\n        this.decreaseCard();\n      }\n    });\n\n    this.state = {\n      explanationCardDeck: this.props.conceptExplanationsArray,\n      displayCardIndex: 0\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"keyup\", this.handleKeyPress);\n  }\n\n  componentDidUnount() {\n    window.removeEventListener(\"keyup\", this.handleKeyPress);\n  }\n\n  render() {\n    let currentExplanation = this.state.explanationCardDeck[this.state.displayCardIndex];\n\n    if (this.state.displayCardIndex == this.state.explanationCardDeck.length) {\n      // no more cards to display\n      return __jsx(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, __jsx(CardSection, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        onClick: this.handleReplay,\n        className: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, __jsx(\"i\", {\n        className: \"material-icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"replay_rounded\"), \"Replay\")));\n    } else {\n      return __jsx(\"div\", {\n        onKeyDown: this.handleKeyPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, __jsx(SwipableCard, {\n        key: currentExplanation.explanationID,\n        explanation: currentExplanation,\n        advanceCard: this.advanceCard,\n        loggedInUser: this.props.loggedInUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\nexport default SwipableCardContainer;","map":{"version":3,"sources":["/Users/danigrant/Projects/ahamoments/components/SwipableCardContainer.js"],"names":["React","SwipableCard","Card","CardSection","ExplanationCard","getConceptExplanations","withRouter","update","SwipableCardContainer","Component","constructor","props","state","displayCardIndex","explanationCardDeck","length","setState","e","keyCode","advanceCard","decreaseCard","conceptExplanationsArray","componentDidMount","window","addEventListener","handleKeyPress","componentDidUnount","removeEventListener","render","currentExplanation","handleReplay","explanationID","loggedInUser"],"mappings":"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","sourcesContent":["import React from 'react'\nimport SwipableCard from './SwipableCard'\nimport Card from './Card'\nimport CardSection from './CardSection'\nimport ExplanationCard from './ExplanationCard'\nimport { getConceptExplanations } from '../utils/firebase'\nimport { withRouter } from 'next/router'\nimport update from 'immutability-helper';\n\nclass SwipableCardContainer extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      explanationCardDeck: this.props.conceptExplanationsArray,\n      displayCardIndex: 0\n    }\n  }\n  componentDidMount() {\n    window.addEventListener(\"keyup\", this.handleKeyPress);\n  }\n  componentDidUnount() {\n    window.removeEventListener(\"keyup\", this.handleKeyPress);\n  }\n  advanceCard = () => {\n    if (this.state.displayCardIndex > this.state.explanationCardDeck.length) {\n      this.setState({\n        displayCardIndex: 0\n      })\n    } else {\n      this.setState({\n        displayCardIndex: this.state.displayCardIndex + 1\n      })\n    }\n  }\n  decreaseCard = () => {\n    if (this.state.displayCardIndex < 1) {\n      this.setState({\n        displayCardIndex: 0\n      })\n    } else {\n      this.setState({\n        displayCardIndex: this.state.displayCardIndex - 1\n      })\n    }\n  }\n  handleReplay = () => {\n    this.setState({\n      displayCardIndex: 0\n    })\n  }\n  handleKeyPress = (e) => {\n    // right 39, left 37, up 38, down 40\n    if (e.keyCode == 39 || e.keyCode == 38) {\n      this.advanceCard()\n    } else if (e.keyCode == 37 || e.keyCode == 40) {\n      this.decreaseCard()\n    }\n  }\n  render() {\n    let currentExplanation = this.state.explanationCardDeck[this.state.displayCardIndex]\n    if (this.state.displayCardIndex == this.state.explanationCardDeck.length ) {\n      // no more cards to display\n      return (\n        <Card>\n          <CardSection>\n            <div onClick={this.handleReplay} className=\"button\"><i className=\"material-icons\">replay_rounded</i>Replay</div>\n          </CardSection>\n        </Card>\n      )\n    } else {\n      return (\n        <div onKeyDown={this.handleKeyPress}>\n          <SwipableCard key={currentExplanation.explanationID} explanation={currentExplanation} advanceCard={this.advanceCard} loggedInUser={this.props.loggedInUser} />\n        </div>\n      )\n    }\n  }\n}\n\nexport default SwipableCardContainer\n"]},"metadata":{},"sourceType":"module"}